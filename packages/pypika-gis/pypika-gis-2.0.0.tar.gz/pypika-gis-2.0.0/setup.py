# -*- coding: utf-8 -*-
from setuptools import setup

packages = \
['pypika_gis', 'pypika_gis.dialects']

package_data = \
{'': ['*']}

install_requires = \
['PyPika<1.0.0']

setup_kwargs = {
    'name': 'pypika-gis',
    'version': '2.0.0',
    'description': 'SpatialTypes functions for extend PyPika with GIS',
    'long_description': '<img src="./.assets/map_icon.png"  width="156px" height="156px" align="left"/>\n\n# PyPika GIS\n\nThis library contains SpatialTypes functions for extending [PyPika](https://github.com/kayak/pypika) with GIS.\n\n![ci_badge](https://github.com/eduardogspereira/pypika-gis/actions/workflows/build.yml/badge.svg)\n\n## Table of Contents\n\n- [PyPika GIS](#pypika-gis)\n  - [Table of Contents](#table-of-contents)\n  - [Install](#install)\n  - [Examples](#examples)\n    - [PostGIS](#postgis)\n    - [MSSQLSpatial](#mssqlspatial)\n  - [Available functions](#available-functions)\n  - [Development](#development)\n    - [Dependencies](#dependencies)\n    - [Setup](#setup)\n    - [Tests](#tests)\n    - [Publish](#publish)\n  - [Credits](#credits)\n\n## Install\n\n```bash\npip install pypika-gis\n```\n\n## Examples\n\n### PostGIS\n\n```python\nfrom pypika import Query, Table\nfrom pypika_gis.spatialtypes import postgis as st\n\ntable = Table(\'table\')\nquery = Query.from_(table).select(table.id, st.AsGeoJSON(table.geom))\nprint(str(query))\n# SELECT "id",ST_AsGeoJSON(\'geom\') FROM "table"\n\nquery = Query.from_(table).select(\'id\').where(\n    st.Intersects(table.geom, st.SetSRID(st.MakePoint(10, 5), 4326)))\nprint(str(query))\n# SELECT "id" FROM "table" WHERE ST_Intersects(\'geom\',ST_SRID(ST_MakePoint(10,5),4326))\n```\n\n### MSSQLSpatial\n\n```python\nfrom pypika import Query, Table\nfrom pypika_gis.spatialtypes import mssql as st\n\ntable = Table(\'table\')\nquery = Query.from_(table).select(table.id, st.AsText(table.geom))\nprint(str(query))\n# SELECT "id",geom.STAsText() FROM "table"\n\nquery = Query.from_(table).select(table.id).where(\n    st.Intersects(table.geom, st.GeomFromText(\'POINT(10 10)\', 4326)))\nprint(str(query))\n# SELECT "id" FROM "table" WHERE geom.STIntersects(geometry::STGeomFromText(\'POINT(10 10)\',4326))\n```\n\n## Available functions\n\n|      pypika-gis      |          PostGIS          |    MSSQLSpatial     |\n| :------------------: | :-----------------------: | :-----------------: |\n|         Area         |         `ST_Area`         |      `STArea`       |\n|       AsBinary       |       `ST_AsBinary`       |    `STAsBinary`     |\n|      AsGeoJSON       |      `ST_AsGeoJSON`       |          ❌          |\n|        AsMVT         |        `ST_AsMVT`         |          ❌          |\n|        AsText        |        `ST_AsText`        |     `STAsText`      |\n|       Boundary       |       `ST_Boundary`       |    `STBoundary`     |\n|        Buffer        |        `ST_Buffer`        |     `STBuffer`      |\n|       Centroid       |       `ST_Centroid`       |    `STCentroid`     |\n|     ClosestPoint     |     `ST_ClosestPoint`     |          ❌          |\n|       Contains       |       `ST_Contains`       |    `STContains`     |\n|      ConvexHull      |      `ST_ConvexHull`      |   `STConvexHull`    |\n|      CoveredBy       |      `ST_CoveredBy`       |          ❌          |\n|        Covers        |        `ST_Covers`        |          ❌          |\n|       Crosses        |       `ST_Crosses`        |     `STCrosses`     |\n|        CurveN        |             ❌             |     `STCurveN`      |\n|     CurveToLine      |     `ST_CurveToLine`      |   `STCurveToLine`   |\n|      Difference      |      `ST_Difference`      |   `STDifference`    |\n|      Dimension       |      `ST_Dimension`       |    `STDimension`    |\n|       Disjoint       |       `ST_Disjoint`       |    `STDisjoint`     |\n|       Distance       |       `ST_Distance`       |    `STDistance`     |\n|       DWithin        |       `ST_DWithin`        |          ❌          |\n|       EndPoint       |       `ST_EndPoint`       |    `STEndPoint`     |\n|       Envelope       |       `ST_Envelope`       |    `STEnvelope`     |\n|        Equals        |        `ST_Equals`        |     `STEquals`      |\n|     ExteriorRing     |     `ST_ExteriorRing`     |  `STExteriorRing`   |\n|        Extent        |        `ST_Extent`        |          ❌          |\n|       GeoHash        |       `ST_GeoHash`        |          ❌          |\n|      GeometryN       |      `ST_GeometryN`       |    `STGeometryN`    |\n|     GeometryType     |     `ST_GeometryType`     |  `STGeometryType`   |\n|   GeogFromGeoJSON    |   `ST_GeogFromGeoJSON`    |          ❌          |\n|     GeogFromText     |     `ST_GeogFromText`     |  `STGeomFromText`   |\n|     GeogFromWKB      |     `ST_GeogFromWKB`      |   `STGeomFromWKB`   |\n|      GeogPoint       |      `ST_GeogPoint`       |          ❌          |\n| GeogPointFromGeoHash | `ST_GeogPointFromGeoHash` |          ❌          |\n|   GeomFromGeoJSON    |   `ST_GeomFromGeoJSON`    |          ❌          |\n|    InteriorRingN     |    `ST_InteriorRingN`     |  `STInteriorRingN`  |\n|     Intersection     |     `ST_Intersection`     |  `STIntersection`   |\n|      Intersects      |      `ST_Intersects`      |   `STIntersects`    |\n|     IsCollection     |     `ST_IsCollection`     |          ❌          |\n|       IsClosed       |       `ST_IsClosed`       |    `STIsClosed`     |\n|       IsEmpty        |       `ST_IsEmpty`        |     `STIsEmpty`     |\n|        IsRing        |        `ST_IsRing`        |     `STIsRing`      |\n|       IsSimple       |       `ST_IsSimple`       |    `STIsSimple`     |\n|       IsValid        |       `ST_IsValid`        |     `STIsValid`     |\n|        Length        |        `ST_Length`        |     `STLength`      |\n|       MakeLine       |       `ST_MakeLine`       |          ❌          |\n|      MakePoint       |      `ST_MakePoint`       |          ❌          |\n|     MakePolygon      |     `ST_MakePolygon`      |          ❌          |\n|      NumCurves       |             ❌             |    `STNumCurves`    |\n|    NumGeometries     |             ❌             |  `STNumGeometries`  |\n|   NumInteriorRing    |             ❌             | `STNumInteriorRing` |\n|      NumPoints       |             ❌             |    `STNumPoints`    |\n|       Overlaps       |       `ST_Overlaps`       |    `STOverlaps`     |\n|      Perimeter       |      `ST_Perimeter`       |          ❌          |\n|        Point         |        `ST_Point`         |       `Point`       |\n|        PointN        |        `ST_PointN`        |     `STPointN`      |\n|    PointOnSurface    |    `ST_PointOnSurface`    | `STPointOnSurface`  |\n|        Relate        |        `ST_Relate`        |     `STRelate`      |\n|       SetSRID        |       `ST_SetSRID`        |          ❌          |\n|         SRID         |             ❌             |    `STSrid`[^1]     |\n|      StartPoint      |      `ST_StartPoint`      |   `STStartPoint`    |\n|    SymDifference     |             ❌             |  `STSymDifference`  |\n|       Touches        |       `ST_Touches`        |     `STTouches`     |\n|        Union         |        `ST_Union`         |      `STUnion`      |\n|        Within        |        `ST_Within`        |     `STWithin`      |\n|          X           |          `ST_X`           |      `STX`[^1]      |\n|          Y           |          `ST_Y`           |      `STY`[^1]      |\n|          Z           |          `ST_Z`           |          ❌          |\n\n[^1]: In MSSQL this is technically a method of the geography/geometry class, and returns a pypika `Field` instead of a `Function`.\n\n## Development\n\n### Dependencies\n\n- [Python](https://www.python.org/downloads/)\n- [poetry](https://python-poetry.org/)\n\n### Setup\n\n```bash\npoetry install\npoetry run pre-commit install\n```\n\n### Tests\n\nFull tests and coverage\n\n```bash\npoetry run pytest\n```\n\n### Publish\n\n```bash\npoetry build\npoetry publish\n```\n\n## Credits\n\npypika-gis is based on [PyPika](https://github.com/kayak/pypika). Check their page for further query buider instructions, examples and more details about PyPika core.\n',
    'author': 'Eduardo G. S. Pereira',
    'author_email': 'edu_vcd@hotmail.com',
    'maintainer': None,
    'maintainer_email': None,
    'url': 'https://github.com/eduardogspereira/pypika-gis',
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'python_requires': '>=3.6.1',
}


setup(**setup_kwargs)

{"version":3,"file":"chunks/vendors-node_modules_echarts_lib_component_graphic_js-node_modules_echarts_lib_component_mark-6a80e2.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///../node_modules/echarts/lib/component/graphic.js","webpack:///../node_modules/echarts/lib/component/markArea.js","webpack:///../node_modules/echarts/lib/component/marker/MarkAreaModel.js","webpack:///../node_modules/echarts/lib/component/marker/MarkAreaView.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar graphicUtil = require(\"../util/graphic\");\n\nvar layoutUtil = require(\"../util/layout\");\n\nvar _number = require(\"../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _nonShapeGraphicElements = {\n  // Reserved but not supported in graphic component.\n  path: null,\n  compoundPath: null,\n  // Supported in graphic component.\n  group: graphicUtil.Group,\n  image: graphicUtil.Image,\n  text: graphicUtil.Text\n}; // -------------\n// Preprocessor\n// -------------\n\necharts.registerPreprocessor(function (option) {\n  var graphicOption = option.graphic; // Convert\n  // {graphic: [{left: 10, type: 'circle'}, ...]}\n  // or\n  // {graphic: {left: 10, type: 'circle'}}\n  // to\n  // {graphic: [{elements: [{left: 10, type: 'circle'}, ...]}]}\n\n  if (zrUtil.isArray(graphicOption)) {\n    if (!graphicOption[0] || !graphicOption[0].elements) {\n      option.graphic = [{\n        elements: graphicOption\n      }];\n    } else {\n      // Only one graphic instance can be instantiated. (We dont\n      // want that too many views are created in echarts._viewMap)\n      option.graphic = [option.graphic[0]];\n    }\n  } else if (graphicOption && !graphicOption.elements) {\n    option.graphic = [{\n      elements: [graphicOption]\n    }];\n  }\n}); // ------\n// Model\n// ------\n\nvar GraphicModel = echarts.extendComponentModel({\n  type: 'graphic',\n  defaultOption: {\n    // Extra properties for each elements:\n    //\n    // left/right/top/bottom: (like 12, '22%', 'center', default undefined)\n    //      If left/rigth is set, shape.x/shape.cx/position will not be used.\n    //      If top/bottom is set, shape.y/shape.cy/position will not be used.\n    //      This mechanism is useful when you want to position a group/element\n    //      against the right side or the center of this container.\n    //\n    // width/height: (can only be pixel value, default 0)\n    //      Only be used to specify contianer(group) size, if needed. And\n    //      can not be percentage value (like '33%'). See the reason in the\n    //      layout algorithm below.\n    //\n    // bounding: (enum: 'all' (default) | 'raw')\n    //      Specify how to calculate boundingRect when locating.\n    //      'all': Get uioned and transformed boundingRect\n    //          from both itself and its descendants.\n    //          This mode simplies confining a group of elements in the bounding\n    //          of their ancester container (e.g., using 'right: 0').\n    //      'raw': Only use the boundingRect of itself and before transformed.\n    //          This mode is similar to css behavior, which is useful when you\n    //          want an element to be able to overflow its container. (Consider\n    //          a rotated circle needs to be located in a corner.)\n    // info: custom info. enables user to mount some info on elements and use them\n    //      in event handlers. Update them only when user specified, otherwise, remain.\n    // Note: elements is always behind its ancestors in this elements array.\n    elements: [],\n    parentId: null\n  },\n\n  /**\n   * Save el options for the sake of the performance (only update modified graphics).\n   * The order is the same as those in option. (ancesters -> descendants)\n   *\n   * @private\n   * @type {Array.<Object>}\n   */\n  _elOptionsToUpdate: null,\n\n  /**\n   * @override\n   */\n  mergeOption: function (option) {\n    // Prevent default merge to elements\n    var elements = this.option.elements;\n    this.option.elements = null;\n    GraphicModel.superApply(this, 'mergeOption', arguments);\n    this.option.elements = elements;\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function (newOption, isInit) {\n    var thisOption = this.option;\n    var newList = (isInit ? thisOption : newOption).elements;\n    var existList = thisOption.elements = isInit ? [] : thisOption.elements;\n    var flattenedList = [];\n\n    this._flatten(newList, flattenedList);\n\n    var mappingResult = modelUtil.mappingToExists(existList, flattenedList);\n    modelUtil.makeIdAndName(mappingResult); // Clear elOptionsToUpdate\n\n    var elOptionsToUpdate = this._elOptionsToUpdate = [];\n    zrUtil.each(mappingResult, function (resultItem, index) {\n      var newElOption = resultItem.option;\n\n      if (!newElOption) {\n        return;\n      }\n\n      elOptionsToUpdate.push(newElOption);\n      setKeyInfoToNewElOption(resultItem, newElOption);\n      mergeNewElOptionToExist(existList, index, newElOption);\n      setLayoutInfoToExist(existList[index], newElOption);\n    }, this); // Clean\n\n    for (var i = existList.length - 1; i >= 0; i--) {\n      if (existList[i] == null) {\n        existList.splice(i, 1);\n      } else {\n        // $action should be volatile, otherwise option gotten from\n        // `getOption` will contain unexpected $action.\n        delete existList[i].$action;\n      }\n    }\n  },\n\n  /**\n   * Convert\n   * [{\n   *  type: 'group',\n   *  id: 'xx',\n   *  children: [{type: 'circle'}, {type: 'polygon'}]\n   * }]\n   * to\n   * [\n   *  {type: 'group', id: 'xx'},\n   *  {type: 'circle', parentId: 'xx'},\n   *  {type: 'polygon', parentId: 'xx'}\n   * ]\n   *\n   * @private\n   * @param {Array.<Object>} optionList option list\n   * @param {Array.<Object>} result result of flatten\n   * @param {Object} parentOption parent option\n   */\n  _flatten: function (optionList, result, parentOption) {\n    zrUtil.each(optionList, function (option) {\n      if (!option) {\n        return;\n      }\n\n      if (parentOption) {\n        option.parentOption = parentOption;\n      }\n\n      result.push(option);\n      var children = option.children;\n\n      if (option.type === 'group' && children) {\n        this._flatten(children, result, option);\n      } // Deleting for JSON output, and for not affecting group creation.\n\n\n      delete option.children;\n    }, this);\n  },\n  // FIXME\n  // Pass to view using payload? setOption has a payload?\n  useElOptionsToUpdate: function () {\n    var els = this._elOptionsToUpdate; // Clear to avoid render duplicately when zooming.\n\n    this._elOptionsToUpdate = null;\n    return els;\n  }\n}); // -----\n// View\n// -----\n\necharts.extendComponentView({\n  type: 'graphic',\n\n  /**\n   * @override\n   */\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {module:zrender/core/util.HashMap}\n     */\n    this._elMap = zrUtil.createHashMap();\n    /**\n     * @private\n     * @type {module:echarts/graphic/GraphicModel}\n     */\n\n    this._lastGraphicModel;\n  },\n\n  /**\n   * @override\n   */\n  render: function (graphicModel, ecModel, api) {\n    // Having leveraged between use cases and algorithm complexity, a very\n    // simple layout mechanism is used:\n    // The size(width/height) can be determined by itself or its parent (not\n    // implemented yet), but can not by its children. (Top-down travel)\n    // The location(x/y) can be determined by the bounding rect of itself\n    // (can including its descendants or not) and the size of its parent.\n    // (Bottom-up travel)\n    // When `chart.clear()` or `chart.setOption({...}, true)` with the same id,\n    // view will be reused.\n    if (graphicModel !== this._lastGraphicModel) {\n      this._clear();\n    }\n\n    this._lastGraphicModel = graphicModel;\n\n    this._updateElements(graphicModel);\n\n    this._relocate(graphicModel, api);\n  },\n\n  /**\n   * Update graphic elements.\n   *\n   * @private\n   * @param {Object} graphicModel graphic model\n   */\n  _updateElements: function (graphicModel) {\n    var elOptionsToUpdate = graphicModel.useElOptionsToUpdate();\n\n    if (!elOptionsToUpdate) {\n      return;\n    }\n\n    var elMap = this._elMap;\n    var rootGroup = this.group; // Top-down tranverse to assign graphic settings to each elements.\n\n    zrUtil.each(elOptionsToUpdate, function (elOption) {\n      var $action = elOption.$action;\n      var id = elOption.id;\n      var existEl = elMap.get(id);\n      var parentId = elOption.parentId;\n      var targetElParent = parentId != null ? elMap.get(parentId) : rootGroup;\n      var elOptionStyle = elOption.style;\n\n      if (elOption.type === 'text' && elOptionStyle) {\n        // In top/bottom mode, textVerticalAlign should not be used, which cause\n        // inaccurately locating.\n        if (elOption.hv && elOption.hv[1]) {\n          elOptionStyle.textVerticalAlign = elOptionStyle.textBaseline = null;\n        } // Compatible with previous setting: both support fill and textFill,\n        // stroke and textStroke.\n\n\n        !elOptionStyle.hasOwnProperty('textFill') && elOptionStyle.fill && (elOptionStyle.textFill = elOptionStyle.fill);\n        !elOptionStyle.hasOwnProperty('textStroke') && elOptionStyle.stroke && (elOptionStyle.textStroke = elOptionStyle.stroke);\n      } // Remove unnecessary props to avoid potential problems.\n\n\n      var elOptionCleaned = getCleanedElOption(elOption); // For simple, do not support parent change, otherwise reorder is needed.\n\n      if (!$action || $action === 'merge') {\n        existEl ? existEl.attr(elOptionCleaned) : createEl(id, targetElParent, elOptionCleaned, elMap);\n      } else if ($action === 'replace') {\n        removeEl(existEl, elMap);\n        createEl(id, targetElParent, elOptionCleaned, elMap);\n      } else if ($action === 'remove') {\n        removeEl(existEl, elMap);\n      }\n\n      var el = elMap.get(id);\n\n      if (el) {\n        el.__ecGraphicWidthOption = elOption.width;\n        el.__ecGraphicHeightOption = elOption.height;\n        setEventData(el, graphicModel, elOption);\n      }\n    });\n  },\n\n  /**\n   * Locate graphic elements.\n   *\n   * @private\n   * @param {Object} graphicModel graphic model\n   * @param {module:echarts/ExtensionAPI} api extension API\n   */\n  _relocate: function (graphicModel, api) {\n    var elOptions = graphicModel.option.elements;\n    var rootGroup = this.group;\n    var elMap = this._elMap;\n    var apiWidth = api.getWidth();\n    var apiHeight = api.getHeight(); // Top-down to calculate percentage width/height of group\n\n    for (var i = 0; i < elOptions.length; i++) {\n      var elOption = elOptions[i];\n      var el = elMap.get(elOption.id);\n\n      if (!el || !el.isGroup) {\n        continue;\n      }\n\n      var parentEl = el.parent;\n      var isParentRoot = parentEl === rootGroup; // Like 'position:absolut' in css, default 0.\n\n      el.__ecGraphicWidth = parsePercent(el.__ecGraphicWidthOption, isParentRoot ? apiWidth : parentEl.__ecGraphicWidth) || 0;\n      el.__ecGraphicHeight = parsePercent(el.__ecGraphicHeightOption, isParentRoot ? apiHeight : parentEl.__ecGraphicHeight) || 0;\n    } // Bottom-up tranvese all elements (consider ec resize) to locate elements.\n\n\n    for (var i = elOptions.length - 1; i >= 0; i--) {\n      var elOption = elOptions[i];\n      var el = elMap.get(elOption.id);\n\n      if (!el) {\n        continue;\n      }\n\n      var parentEl = el.parent;\n      var containerInfo = parentEl === rootGroup ? {\n        width: apiWidth,\n        height: apiHeight\n      } : {\n        width: parentEl.__ecGraphicWidth,\n        height: parentEl.__ecGraphicHeight\n      }; // PENDING\n      // Currently, when `bounding: 'all'`, the union bounding rect of the group\n      // does not include the rect of [0, 0, group.width, group.height], which\n      // is probably weird for users. Should we make a break change for it?\n\n      layoutUtil.positionElement(el, elOption, containerInfo, null, {\n        hv: elOption.hv,\n        boundingMode: elOption.bounding\n      });\n    }\n  },\n\n  /**\n   * Clear all elements.\n   *\n   * @private\n   */\n  _clear: function () {\n    var elMap = this._elMap;\n    elMap.each(function (el) {\n      removeEl(el, elMap);\n    });\n    this._elMap = zrUtil.createHashMap();\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._clear();\n  }\n});\n\nfunction createEl(id, targetElParent, elOption, elMap) {\n  var graphicType = elOption.type;\n  var Clz = _nonShapeGraphicElements.hasOwnProperty(graphicType) // Those graphic elements are not shapes. They should not be\n  // overwritten by users, so do them first.\n  ? _nonShapeGraphicElements[graphicType] : graphicUtil.getShapeClass(graphicType);\n  var el = new Clz(elOption);\n  targetElParent.add(el);\n  elMap.set(id, el);\n  el.__ecGraphicId = id;\n}\n\nfunction removeEl(existEl, elMap) {\n  var existElParent = existEl && existEl.parent;\n\n  if (existElParent) {\n    existEl.type === 'group' && existEl.traverse(function (el) {\n      removeEl(el, elMap);\n    });\n    elMap.removeKey(existEl.__ecGraphicId);\n    existElParent.remove(existEl);\n  }\n} // Remove unnecessary props to avoid potential problems.\n\n\nfunction getCleanedElOption(elOption) {\n  elOption = zrUtil.extend({}, elOption);\n  zrUtil.each(['id', 'parentId', '$action', 'hv', 'bounding'].concat(layoutUtil.LOCATION_PARAMS), function (name) {\n    delete elOption[name];\n  });\n  return elOption;\n}\n\nfunction isSetLoc(obj, props) {\n  var isSet;\n  zrUtil.each(props, function (prop) {\n    obj[prop] != null && obj[prop] !== 'auto' && (isSet = true);\n  });\n  return isSet;\n}\n\nfunction setKeyInfoToNewElOption(resultItem, newElOption) {\n  var existElOption = resultItem.exist; // Set id and type after id assigned.\n\n  newElOption.id = resultItem.keyInfo.id;\n  !newElOption.type && existElOption && (newElOption.type = existElOption.type); // Set parent id if not specified\n\n  if (newElOption.parentId == null) {\n    var newElParentOption = newElOption.parentOption;\n\n    if (newElParentOption) {\n      newElOption.parentId = newElParentOption.id;\n    } else if (existElOption) {\n      newElOption.parentId = existElOption.parentId;\n    }\n  } // Clear\n\n\n  newElOption.parentOption = null;\n}\n\nfunction mergeNewElOptionToExist(existList, index, newElOption) {\n  // Update existing options, for `getOption` feature.\n  var newElOptCopy = zrUtil.extend({}, newElOption);\n  var existElOption = existList[index];\n  var $action = newElOption.$action || 'merge';\n\n  if ($action === 'merge') {\n    if (existElOption) {\n      // We can ensure that newElOptCopy and existElOption are not\n      // the same object, so `merge` will not change newElOptCopy.\n      zrUtil.merge(existElOption, newElOptCopy, true); // Rigid body, use ignoreSize.\n\n      layoutUtil.mergeLayoutParam(existElOption, newElOptCopy, {\n        ignoreSize: true\n      }); // Will be used in render.\n\n      layoutUtil.copyLayoutParams(newElOption, existElOption);\n    } else {\n      existList[index] = newElOptCopy;\n    }\n  } else if ($action === 'replace') {\n    existList[index] = newElOptCopy;\n  } else if ($action === 'remove') {\n    // null will be cleaned later.\n    existElOption && (existList[index] = null);\n  }\n}\n\nfunction setLayoutInfoToExist(existItem, newElOption) {\n  if (!existItem) {\n    return;\n  }\n\n  existItem.hv = newElOption.hv = [// Rigid body, dont care `width`.\n  isSetLoc(newElOption, ['left', 'right']), // Rigid body, dont care `height`.\n  isSetLoc(newElOption, ['top', 'bottom'])]; // Give default group size. Otherwise layout error may occur.\n\n  if (existItem.type === 'group') {\n    existItem.width == null && (existItem.width = newElOption.width = 0);\n    existItem.height == null && (existItem.height = newElOption.height = 0);\n  }\n}\n\nfunction setEventData(el, graphicModel, elOption) {\n  var eventData = el.eventData; // Simple optimize for large amount of elements that no need event.\n\n  if (!el.silent && !el.ignore && !eventData) {\n    eventData = el.eventData = {\n      componentType: 'graphic',\n      componentIndex: graphicModel.componentIndex,\n      name: el.name\n    };\n  } // `elOption.info` enables user to mount some info on\n  // elements and use them in event handlers.\n\n\n  if (eventData) {\n    eventData.info = el.info;\n  }\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"./marker/MarkAreaModel\");\n\nrequire(\"./marker/MarkAreaView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerPreprocessor(function (opt) {\n  // Make sure markArea component is enabled\n  opt.markArea = opt.markArea || {};\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar MarkerModel = require(\"./MarkerModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = MarkerModel.extend({\n  type: 'markArea',\n  defaultOption: {\n    zlevel: 0,\n    // PENDING\n    z: 1,\n    tooltip: {\n      trigger: 'item'\n    },\n    // markArea should fixed on the coordinate system\n    animation: false,\n    label: {\n      show: true,\n      position: 'top'\n    },\n    itemStyle: {\n      // color and borderColor default to use color from series\n      // color: 'auto'\n      // borderColor: 'auto'\n      borderWidth: 0\n    },\n    emphasis: {\n      label: {\n        show: true,\n        position: 'top'\n      }\n    }\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorUtil = require(\"zrender/lib/tool/color\");\n\nvar List = require(\"../../data/List\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar markerHelper = require(\"./markerHelper\");\n\nvar MarkerView = require(\"./MarkerView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO Better on polar\nvar markAreaTransform = function (seriesModel, coordSys, maModel, item) {\n  var lt = markerHelper.dataTransform(seriesModel, item[0]);\n  var rb = markerHelper.dataTransform(seriesModel, item[1]);\n  var retrieve = zrUtil.retrieve; // FIXME make sure lt is less than rb\n\n  var ltCoord = lt.coord;\n  var rbCoord = rb.coord;\n  ltCoord[0] = retrieve(ltCoord[0], -Infinity);\n  ltCoord[1] = retrieve(ltCoord[1], -Infinity);\n  rbCoord[0] = retrieve(rbCoord[0], Infinity);\n  rbCoord[1] = retrieve(rbCoord[1], Infinity); // Merge option into one\n\n  var result = zrUtil.mergeAll([{}, lt, rb]);\n  result.coord = [lt.coord, rb.coord];\n  result.x0 = lt.x;\n  result.y0 = lt.y;\n  result.x1 = rb.x;\n  result.y1 = rb.y;\n  return result;\n};\n\nfunction isInifinity(val) {\n  return !isNaN(val) && !isFinite(val);\n} // If a markArea has one dim\n\n\nfunction ifMarkLineHasOnlyDim(dimIndex, fromCoord, toCoord, coordSys) {\n  var otherDimIndex = 1 - dimIndex;\n  return isInifinity(fromCoord[otherDimIndex]) && isInifinity(toCoord[otherDimIndex]);\n}\n\nfunction markAreaFilter(coordSys, item) {\n  var fromCoord = item.coord[0];\n  var toCoord = item.coord[1];\n\n  if (coordSys.type === 'cartesian2d') {\n    // In case\n    // {\n    //  markArea: {\n    //    data: [{ yAxis: 2 }]\n    //  }\n    // }\n    if (fromCoord && toCoord && (ifMarkLineHasOnlyDim(1, fromCoord, toCoord, coordSys) || ifMarkLineHasOnlyDim(0, fromCoord, toCoord, coordSys))) {\n      return true;\n    }\n  }\n\n  return markerHelper.dataFilter(coordSys, {\n    coord: fromCoord,\n    x: item.x0,\n    y: item.y0\n  }) || markerHelper.dataFilter(coordSys, {\n    coord: toCoord,\n    x: item.x1,\n    y: item.y1\n  });\n} // dims can be ['x0', 'y0'], ['x1', 'y1'], ['x0', 'y1'], ['x1', 'y0']\n\n\nfunction getSingleMarkerEndPoint(data, idx, dims, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  var itemModel = data.getItemModel(idx);\n  var point;\n  var xPx = numberUtil.parsePercent(itemModel.get(dims[0]), api.getWidth());\n  var yPx = numberUtil.parsePercent(itemModel.get(dims[1]), api.getHeight());\n\n  if (!isNaN(xPx) && !isNaN(yPx)) {\n    point = [xPx, yPx];\n  } else {\n    // Chart like bar may have there own marker positioning logic\n    if (seriesModel.getMarkerPosition) {\n      // Use the getMarkerPoisition\n      point = seriesModel.getMarkerPosition(data.getValues(dims, idx));\n    } else {\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n      var pt = [x, y];\n      coordSys.clampData && coordSys.clampData(pt, pt);\n      point = coordSys.dataToPoint(pt, true);\n    }\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n\n      if (isInifinity(x)) {\n        point[0] = xAxis.toGlobalCoord(xAxis.getExtent()[dims[0] === 'x0' ? 0 : 1]);\n      } else if (isInifinity(y)) {\n        point[1] = yAxis.toGlobalCoord(yAxis.getExtent()[dims[1] === 'y0' ? 0 : 1]);\n      }\n    } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n  }\n\n  return point;\n}\n\nvar dimPermutations = [['x0', 'y0'], ['x1', 'y0'], ['x1', 'y1'], ['x0', 'y1']];\nMarkerView.extend({\n  type: 'markArea',\n  // updateLayout: function (markAreaModel, ecModel, api) {\n  //     ecModel.eachSeries(function (seriesModel) {\n  //         var maModel = seriesModel.markAreaModel;\n  //         if (maModel) {\n  //             var areaData = maModel.getData();\n  //             areaData.each(function (idx) {\n  //                 var points = zrUtil.map(dimPermutations, function (dim) {\n  //                     return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n  //                 });\n  //                 // Layout\n  //                 areaData.setItemLayout(idx, points);\n  //                 var el = areaData.getItemGraphicEl(idx);\n  //                 el.setShape('points', points);\n  //             });\n  //         }\n  //     }, this);\n  // },\n  updateTransform: function (markAreaModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var maModel = seriesModel.markAreaModel;\n\n      if (maModel) {\n        var areaData = maModel.getData();\n        areaData.each(function (idx) {\n          var points = zrUtil.map(dimPermutations, function (dim) {\n            return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n          }); // Layout\n\n          areaData.setItemLayout(idx, points);\n          var el = areaData.getItemGraphicEl(idx);\n          el.setShape('points', points);\n        });\n      }\n    }, this);\n  },\n  renderSeries: function (seriesModel, maModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var areaGroupMap = this.markerGroupMap;\n    var polygonGroup = areaGroupMap.get(seriesId) || areaGroupMap.set(seriesId, {\n      group: new graphic.Group()\n    });\n    this.group.add(polygonGroup.group);\n    polygonGroup.__keep = true;\n    var areaData = createList(coordSys, seriesModel, maModel); // Line data for tooltip and formatter\n\n    maModel.setData(areaData); // Update visual and layout of line\n\n    areaData.each(function (idx) {\n      // Layout\n      areaData.setItemLayout(idx, zrUtil.map(dimPermutations, function (dim) {\n        return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n      })); // Visual\n\n      areaData.setItemVisual(idx, {\n        color: seriesData.getVisual('color')\n      });\n    });\n    areaData.diff(polygonGroup.__data).add(function (idx) {\n      var polygon = new graphic.Polygon({\n        shape: {\n          points: areaData.getItemLayout(idx)\n        }\n      });\n      areaData.setItemGraphicEl(idx, polygon);\n      polygonGroup.group.add(polygon);\n    }).update(function (newIdx, oldIdx) {\n      var polygon = polygonGroup.__data.getItemGraphicEl(oldIdx);\n\n      graphic.updateProps(polygon, {\n        shape: {\n          points: areaData.getItemLayout(newIdx)\n        }\n      }, maModel, newIdx);\n      polygonGroup.group.add(polygon);\n      areaData.setItemGraphicEl(newIdx, polygon);\n    }).remove(function (idx) {\n      var polygon = polygonGroup.__data.getItemGraphicEl(idx);\n\n      polygonGroup.group.remove(polygon);\n    }).execute();\n    areaData.eachItemGraphicEl(function (polygon, idx) {\n      var itemModel = areaData.getItemModel(idx);\n      var labelModel = itemModel.getModel('label');\n      var labelHoverModel = itemModel.getModel('emphasis.label');\n      var color = areaData.getItemVisual(idx, 'color');\n      polygon.useStyle(zrUtil.defaults(itemModel.getModel('itemStyle').getItemStyle(), {\n        fill: colorUtil.modifyAlpha(color, 0.4),\n        stroke: color\n      }));\n      polygon.hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n      graphic.setLabelStyle(polygon.style, polygon.hoverStyle, labelModel, labelHoverModel, {\n        labelFetcher: maModel,\n        labelDataIndex: idx,\n        defaultText: areaData.getName(idx) || '',\n        isRectText: true,\n        autoColor: color\n      });\n      graphic.setHoverStyle(polygon, {});\n      polygon.dataModel = maModel;\n    });\n    polygonGroup.__data = areaData;\n    polygonGroup.group.silent = maModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} coordSys\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\nfunction createList(coordSys, seriesModel, maModel) {\n  var coordDimsInfos;\n  var areaData;\n  var dims = ['x0', 'y0', 'x1', 'y1'];\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var data = seriesModel.getData();\n      var info = data.getDimensionInfo(data.mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      return zrUtil.defaults({\n        name: coordDim\n      }, info);\n    });\n    areaData = new List(zrUtil.map(dims, function (dim, idx) {\n      return {\n        name: dim,\n        type: coordDimsInfos[idx % 2].type\n      };\n    }), maModel);\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n    areaData = new List(coordDimsInfos, maModel);\n  }\n\n  var optData = zrUtil.map(maModel.get('data'), zrUtil.curry(markAreaTransform, seriesModel, coordSys, maModel));\n\n  if (coordSys) {\n    optData = zrUtil.filter(optData, zrUtil.curry(markAreaFilter, coordSys));\n  }\n\n  var dimValueGetter = coordSys ? function (item, dimName, dataIndex, dimIndex) {\n    return item.coord[Math.floor(dimIndex / 2)][dimIndex % 2];\n  } : function (item) {\n    return item.value;\n  };\n  areaData.initData(optData, null, dimValueGetter);\n  areaData.hasItemOption = true;\n  return areaData;\n}"],"names":["__DEV__","echarts","zrUtil","modelUtil","graphicUtil","layoutUtil","parsePercent","_nonShapeGraphicElements","path","compoundPath","group","Group","image","Image","text","Text","registerPreprocessor","option","graphicOption","graphic","isArray","elements","GraphicModel","extendComponentModel","type","defaultOption","parentId","_elOptionsToUpdate","mergeOption","this","superApply","arguments","optionUpdated","newOption","isInit","thisOption","newList","existList","flattenedList","_flatten","mappingResult","mappingToExists","makeIdAndName","elOptionsToUpdate","each","resultItem","index","newElOption","push","existElOption","exist","id","keyInfo","newElParentOption","parentOption","setKeyInfoToNewElOption","newElOptCopy","extend","$action","merge","mergeLayoutParam","ignoreSize","copyLayoutParams","mergeNewElOptionToExist","existItem","hv","isSetLoc","width","height","setLayoutInfoToExist","i","length","splice","optionList","result","children","useElOptionsToUpdate","els","createEl","targetElParent","elOption","elMap","graphicType","el","hasOwnProperty","getShapeClass","add","set","__ecGraphicId","removeEl","existEl","existElParent","parent","traverse","removeKey","remove","obj","props","isSet","prop","extendComponentView","init","ecModel","api","_elMap","createHashMap","_lastGraphicModel","render","graphicModel","_clear","_updateElements","_relocate","rootGroup","get","elOptionStyle","style","textVerticalAlign","textBaseline","fill","textFill","stroke","textStroke","elOptionCleaned","concat","LOCATION_PARAMS","name","getCleanedElOption","attr","__ecGraphicWidthOption","__ecGraphicHeightOption","eventData","silent","ignore","componentType","componentIndex","info","setEventData","elOptions","apiWidth","getWidth","apiHeight","getHeight","isGroup","isParentRoot","parentEl","__ecGraphicWidth","__ecGraphicHeight","containerInfo","positionElement","boundingMode","bounding","dispose","opt","markArea","_default","zlevel","z","tooltip","trigger","animation","label","show","position","itemStyle","borderWidth","emphasis","module","exports","colorUtil","List","numberUtil","markerHelper","MarkerView","markAreaTransform","seriesModel","coordSys","maModel","item","lt","dataTransform","rb","retrieve","ltCoord","coord","rbCoord","Infinity","mergeAll","x0","x","y0","y","x1","y1","isInifinity","val","isNaN","isFinite","ifMarkLineHasOnlyDim","dimIndex","fromCoord","toCoord","otherDimIndex","markAreaFilter","dataFilter","getSingleMarkerEndPoint","data","idx","dims","point","coordinateSystem","itemModel","getItemModel","xPx","yPx","getMarkerPosition","getValues","pt","clampData","dataToPoint","xAxis","getAxis","yAxis","toGlobalCoord","getExtent","dimPermutations","updateTransform","markAreaModel","eachSeries","areaData","getData","points","map","dim","setItemLayout","getItemGraphicEl","setShape","renderSeries","seriesId","seriesData","areaGroupMap","markerGroupMap","polygonGroup","__keep","coordDimsInfos","dimensions","coordDim","getDimensionInfo","mapDimension","defaults","optData","curry","filter","dimValueGetter","dimName","dataIndex","Math","floor","value","initData","hasItemOption","createList","setData","setItemVisual","color","getVisual","diff","__data","polygon","Polygon","shape","getItemLayout","setItemGraphicEl","update","newIdx","oldIdx","updateProps","execute","eachItemGraphicEl","labelModel","getModel","labelHoverModel","getItemVisual","useStyle","getItemStyle","modifyAlpha","hoverStyle","setLabelStyle","labelFetcher","labelDataIndex","defaultText","getName","isRectText","autoColor","setHoverStyle","dataModel"],"sourceRoot":""}
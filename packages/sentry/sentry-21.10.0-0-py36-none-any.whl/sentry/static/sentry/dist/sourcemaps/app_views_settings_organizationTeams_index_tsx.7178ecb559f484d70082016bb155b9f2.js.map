{"version":3,"file":"chunks/app_views_settings_organizationTeams_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/sentryDocumentTitle.tsx","webpack:///./app/utils/recreateRoute.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/organizationTeams/allTeamsRow.tsx","webpack:///./app/views/settings/organizationTeams/allTeamsList.tsx","webpack:///./app/views/settings/organizationTeams/organizationAccessRequests.tsx","webpack:///./app/views/settings/organizationTeams/organizationTeams.tsx","webpack:///./app/views/settings/organizationTeams/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport DocumentTitle from 'react-document-title';\n\ntype Props = {\n  // Main page title\n  title: string;\n  orgSlug?: string;\n  projectSlug?: string;\n  children?: React.ReactNode;\n};\n\nfunction SentryDocumentTitle({title, orgSlug, projectSlug, children}: Props) {\n  function getDocTitle() {\n    if (!orgSlug && !projectSlug) {\n      return title;\n    }\n\n    if (orgSlug && projectSlug) {\n      return `${title} - ${orgSlug} - ${projectSlug}`;\n    }\n\n    if (orgSlug) {\n      return `${title} - ${orgSlug}`;\n    }\n\n    return `${title} - ${projectSlug}`;\n  }\n\n  const docTitle = getDocTitle();\n\n  return (\n    <DocumentTitle title={`${docTitle} - Sentry`}>\n      {children as React.ReactChild}\n    </DocumentTitle>\n  );\n}\n\nexport default SentryDocumentTitle;\n","import {Location} from 'history';\nimport findLastIndex from 'lodash/findLastIndex';\n\nimport replaceRouterParams from 'app/utils/replaceRouterParams';\nimport {RouteWithName} from 'app/views/settings/components/settingsBreadcrumb/types';\n\ntype Options = {\n  routes: RouteWithName[];\n\n  // parameters to replace any route string parameters (e.g. if route is `:orgId`,\n  // params should have `{orgId: slug}`\n  params: {[key: string]: string | undefined};\n\n  /**\n   * The number of routes to to pop off of `routes\n   * Must be < 0\n   *\n   * There's no ts type for negative numbers so we are arbitrarily specifying -1-9\n   */\n  stepBack?: -1 | -2 | -3 | -4 | -5 | -6 | -7 | -8 | -9;\n  location?: Location;\n};\n\n/**\n * Given a route object or a string and a list of routes + params from router, this will attempt to recreate a location string while replacing url params.\n * Can additionally specify the number of routes to move back\n *\n * See tests for examples\n */\nexport default function recreateRoute(\n  to: string | RouteWithName,\n  options: Options\n): string {\n  const {routes, params, location, stepBack} = options;\n  const paths = routes.map(({path}) => path || '');\n  let lastRootIndex: number;\n  let routeIndex: number | undefined;\n\n  // TODO(ts): typescript things\n  if (typeof to !== 'string') {\n    routeIndex = routes.indexOf(to) + 1;\n    lastRootIndex = findLastIndex(paths.slice(0, routeIndex), path => path[0] === '/');\n  } else {\n    lastRootIndex = findLastIndex(paths, path => path[0] === '/');\n  }\n\n  let baseRoute = paths.slice(lastRootIndex, routeIndex);\n\n  if (typeof stepBack !== 'undefined') {\n    baseRoute = baseRoute.slice(0, stepBack);\n  }\n\n  const search = location?.search ?? '';\n  const hash = location?.hash ?? '';\n\n  const fullRoute = `${baseRoute.join('')}${\n    typeof to !== 'string' ? '' : to\n  }${search}${hash}`;\n\n  return replaceRouterParams(fullRoute, params);\n}\n","import * as React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent() as React.ReactChild}\n      </DocumentTitle>\n    );\n  }\n}\n","import * as React from 'react';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';\nimport {joinTeam, leaveTeam} from 'app/actionCreators/teams';\nimport TeamActions from 'app/actions/teamActions';\nimport {Client} from 'app/api';\nimport Button from 'app/components/button';\nimport IdBadge from 'app/components/idBadge';\nimport Link from 'app/components/links/link';\nimport {PanelItem} from 'app/components/panels';\nimport {t, tct, tn} from 'app/locale';\nimport space from 'app/styles/space';\nimport {Organization, Team} from 'app/types';\nimport withApi from 'app/utils/withApi';\n\ntype Props = {\n  api: Client;\n  urlPrefix: string;\n  organization: Organization;\n  team: Team;\n  openMembership: boolean;\n};\n\ntype State = {\n  loading: boolean;\n  error: boolean;\n};\n\nclass AllTeamsRow extends React.Component<Props, State> {\n  state: State = {\n    loading: false,\n    error: false,\n  };\n\n  handleRequestAccess = async () => {\n    const {team} = this.props;\n\n    try {\n      this.joinTeam({\n        successMessage: tct('You have requested access to [team]', {\n          team: `#${team.slug}`,\n        }),\n\n        errorMessage: tct('Unable to request access to [team]', {\n          team: `#${team.slug}`,\n        }),\n      });\n\n      // Update team so that `isPending` is true\n      TeamActions.updateSuccess(team.slug, {\n        ...team,\n        isPending: true,\n      });\n    } catch (_err) {\n      // No need to do anything\n    }\n  };\n\n  handleJoinTeam = () => {\n    const {team} = this.props;\n\n    this.joinTeam({\n      successMessage: tct('You have joined [team]', {\n        team: `#${team.slug}`,\n      }),\n      errorMessage: tct('Unable to join [team]', {\n        team: `#${team.slug}`,\n      }),\n    });\n  };\n\n  joinTeam = ({\n    successMessage,\n    errorMessage,\n  }: {\n    successMessage: React.ReactNode;\n    errorMessage: React.ReactNode;\n  }) => {\n    const {api, organization, team} = this.props;\n\n    this.setState({\n      loading: true,\n    });\n\n    return new Promise<void>((resolve, reject) =>\n      joinTeam(\n        api,\n        {\n          orgId: organization.slug,\n          teamId: team.slug,\n        },\n        {\n          success: () => {\n            this.setState({\n              loading: false,\n              error: false,\n            });\n            addSuccessMessage(successMessage);\n            resolve();\n          },\n          error: () => {\n            this.setState({\n              loading: false,\n              error: true,\n            });\n            addErrorMessage(errorMessage);\n            reject(new Error('Unable to join team'));\n          },\n        }\n      )\n    );\n  };\n\n  handleLeaveTeam = () => {\n    const {api, organization, team} = this.props;\n\n    this.setState({\n      loading: true,\n    });\n\n    leaveTeam(\n      api,\n      {\n        orgId: organization.slug,\n        teamId: team.slug,\n      },\n      {\n        success: () => {\n          this.setState({\n            loading: false,\n            error: false,\n          });\n          addSuccessMessage(\n            tct('You have left [team]', {\n              team: `#${team.slug}`,\n            })\n          );\n        },\n        error: () => {\n          this.setState({\n            loading: false,\n            error: true,\n          });\n          addErrorMessage(\n            tct('Unable to leave [team]', {\n              team: `#${team.slug}`,\n            })\n          );\n        },\n      }\n    );\n  };\n\n  render() {\n    const {team, urlPrefix, openMembership} = this.props;\n    const display = (\n      <IdBadge\n        team={team}\n        avatarSize={36}\n        description={tn('%s Member', '%s Members', team.memberCount)}\n      />\n    );\n\n    // You can only view team details if you have access to team -- this should account\n    // for your role + org open membership\n    const canViewTeam = team.hasAccess;\n\n    return (\n      <TeamPanelItem>\n        <TeamNameWrapper>\n          {canViewTeam ? (\n            <TeamLink to={`${urlPrefix}teams/${team.slug}/`}>{display}</TeamLink>\n          ) : (\n            display\n          )}\n        </TeamNameWrapper>\n        <Spacer>\n          {this.state.loading ? (\n            <Button size=\"small\" disabled>\n              ...\n            </Button>\n          ) : team.isMember ? (\n            <Button size=\"small\" onClick={this.handleLeaveTeam}>\n              {t('Leave Team')}\n            </Button>\n          ) : team.isPending ? (\n            <Button\n              size=\"small\"\n              disabled\n              title={t(\n                'Your request to join this team is being reviewed by organization owners'\n              )}\n            >\n              {t('Request Pending')}\n            </Button>\n          ) : openMembership ? (\n            <Button size=\"small\" onClick={this.handleJoinTeam}>\n              {t('Join Team')}\n            </Button>\n          ) : (\n            <Button size=\"small\" onClick={this.handleRequestAccess}>\n              {t('Request Access')}\n            </Button>\n          )}\n        </Spacer>\n      </TeamPanelItem>\n    );\n  }\n}\n\nconst TeamLink = styled(Link)`\n  display: inline-block;\n\n  &.focus-visible {\n    margin: -${space(1)};\n    padding: ${space(1)};\n    background: #f2eff5;\n    border-radius: 3px;\n    outline: none;\n  }\n`;\n\nexport {AllTeamsRow};\nexport default withApi(AllTeamsRow);\n\nconst TeamPanelItem = styled(PanelItem)`\n  padding: 0;\n  align-items: center;\n`;\n\nconst Spacer = styled('div')`\n  padding: ${space(2)};\n`;\n\nconst TeamNameWrapper = styled(Spacer)`\n  flex: 1;\n`;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport {openCreateTeamModal} from 'app/actionCreators/modal';\nimport Button from 'app/components/button';\nimport {tct} from 'app/locale';\nimport {Organization, Team} from 'app/types';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport TextBlock from 'app/views/settings/components/text/textBlock';\n\nimport AllTeamsRow from './allTeamsRow';\n\ntype Props = {\n  urlPrefix: string;\n  access: Record<string, any>;\n  organization: Organization;\n  teamList: Array<Team>;\n  openMembership: boolean;\n};\n\nfunction AllTeamsList({\n  organization,\n  urlPrefix,\n  openMembership,\n  teamList,\n  access,\n}: Props) {\n  const teamNodes = teamList.map(team => (\n    <AllTeamsRow\n      urlPrefix={urlPrefix}\n      team={team}\n      organization={organization}\n      openMembership={openMembership}\n      key={team.slug}\n    />\n  ));\n\n  if (!teamNodes.length) {\n    const canCreateTeam = access.has('project:admin');\n\n    return (\n      <EmptyMessage>\n        {tct('No teams here. [teamCreate]', {\n          root: <TextBlock noMargin />,\n          teamCreate: canCreateTeam\n            ? tct('You can always [link:create one].', {\n                link: (\n                  <StyledButton\n                    priority=\"link\"\n                    onClick={() =>\n                      openCreateTeamModal({\n                        organization,\n                      })\n                    }\n                  />\n                ),\n              })\n            : null,\n        })}\n      </EmptyMessage>\n    );\n  }\n\n  return <Fragment>{teamNodes}</Fragment>;\n}\n\nexport default AllTeamsList;\n\nconst StyledButton = styled(Button)`\n  font-size: ${p => p.theme.fontSizeLarge};\n`;\n","import * as React from 'react';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';\nimport {Client} from 'app/api';\nimport Button from 'app/components/button';\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'app/components/panels';\nimport {t, tct} from 'app/locale';\nimport space from 'app/styles/space';\nimport {AccessRequest} from 'app/types';\nimport withApi from 'app/utils/withApi';\n\ntype Props = {\n  api: Client;\n  orgId: string;\n  onRemoveAccessRequest: (id: string, isApproved: boolean) => void;\n  requestList: AccessRequest[];\n};\n\ntype State = {\n  accessRequestBusy: Record<string, boolean>;\n};\n\ntype HandleOpts = {\n  id: string;\n  isApproved: boolean;\n  successMessage: string;\n  errorMessage: string;\n};\n\nclass OrganizationAccessRequests extends React.Component<Props, State> {\n  state: State = {\n    accessRequestBusy: {},\n  };\n\n  async handleAction({id, isApproved, successMessage, errorMessage}: HandleOpts) {\n    const {api, orgId, onRemoveAccessRequest} = this.props;\n\n    this.setState(state => ({\n      accessRequestBusy: {...state.accessRequestBusy, [id]: true},\n    }));\n\n    try {\n      await api.requestPromise(`/organizations/${orgId}/access-requests/${id}/`, {\n        method: 'PUT',\n        data: {isApproved},\n      });\n      onRemoveAccessRequest(id, isApproved);\n      addSuccessMessage(successMessage);\n    } catch {\n      addErrorMessage(errorMessage);\n    }\n\n    this.setState(state => ({\n      accessRequestBusy: {...state.accessRequestBusy, [id]: false},\n    }));\n  }\n\n  handleApprove = (id: string, e: React.MouseEvent) => {\n    e.stopPropagation();\n    this.handleAction({\n      id,\n      isApproved: true,\n      successMessage: t('Team request approved'),\n      errorMessage: t('Error approving team request'),\n    });\n  };\n\n  handleDeny = (id: string, e: React.MouseEvent) => {\n    e.stopPropagation();\n    this.handleAction({\n      id,\n      isApproved: false,\n      successMessage: t('Team request denied'),\n      errorMessage: t('Error denying team request'),\n    });\n  };\n\n  render() {\n    const {requestList} = this.props;\n    const {accessRequestBusy} = this.state;\n\n    if (!requestList || !requestList.length) {\n      return null;\n    }\n\n    return (\n      <Panel>\n        <PanelHeader>{t('Pending Team Requests')}</PanelHeader>\n\n        <PanelBody>\n          {requestList.map(({id, member, team, requester}) => {\n            const memberName =\n              member.user &&\n              (member.user.name || member.user.email || member.user.username);\n            const requesterName =\n              requester && (requester.name || requester.email || requester.username);\n            return (\n              <StyledPanelItem key={id}>\n                <div data-test-id=\"request-message\">\n                  {requesterName\n                    ? tct('[requesterName] requests to add [name] to the [team] team.', {\n                        requesterName,\n                        name: <strong>{memberName}</strong>,\n                        team: <strong>#{team.slug}</strong>,\n                      })\n                    : tct('[name] requests access to the [team] team.', {\n                        name: <strong>{memberName}</strong>,\n                        team: <strong>#{team.slug}</strong>,\n                      })}\n                </div>\n                <div>\n                  <StyledButton\n                    priority=\"primary\"\n                    size=\"small\"\n                    onClick={e => this.handleApprove(id, e)}\n                    busy={accessRequestBusy[id]}\n                  >\n                    {t('Approve')}\n                  </StyledButton>\n                  <Button\n                    busy={accessRequestBusy[id]}\n                    onClick={e => this.handleDeny(id, e)}\n                    size=\"small\"\n                  >\n                    {t('Deny')}\n                  </Button>\n                </div>\n              </StyledPanelItem>\n            );\n          })}\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n\nconst StyledPanelItem = styled(PanelItem)`\n  display: grid;\n  grid-template-columns: auto max-content;\n  grid-gap: ${space(2)};\n  align-items: center;\n`;\n\nconst StyledButton = styled(Button)`\n  margin-right: ${space(1)};\n`;\n\nexport default withApi(OrganizationAccessRequests);\n","import {useState} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport debounce from 'lodash/debounce';\nimport partition from 'lodash/partition';\n\nimport {openCreateTeamModal} from 'app/actionCreators/modal';\nimport Button from 'app/components/button';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\nimport SearchBar from 'app/components/searchBar';\nimport SentryDocumentTitle from 'app/components/sentryDocumentTitle';\nimport {DEFAULT_DEBOUNCE_DURATION} from 'app/constants';\nimport {IconAdd} from 'app/icons';\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\nimport {AccessRequest, Organization} from 'app/types';\nimport recreateRoute from 'app/utils/recreateRoute';\nimport useTeams from 'app/utils/useTeams';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\n\nimport AllTeamsList from './allTeamsList';\nimport OrganizationAccessRequests from './organizationAccessRequests';\n\ntype Props = {\n  access: Set<string>;\n  features: Set<string>;\n  organization: Organization;\n  requestList: AccessRequest[];\n  onRemoveAccessRequest: (id: string, isApproved: boolean) => void;\n} & RouteComponentProps<{orgId: string}, {}>;\n\nfunction OrganizationTeams({\n  organization,\n  access,\n  features,\n  routes,\n  params,\n  requestList,\n  onRemoveAccessRequest,\n}: Props) {\n  if (!organization) {\n    return null;\n  }\n  const canCreateTeams = access.has('project:admin');\n\n  const action = (\n    <Button\n      priority=\"primary\"\n      size=\"small\"\n      disabled={!canCreateTeams}\n      title={\n        !canCreateTeams ? t('You do not have permission to create teams') : undefined\n      }\n      onClick={() =>\n        openCreateTeamModal({\n          organization,\n        })\n      }\n      icon={<IconAdd size=\"xs\" isCircled />}\n    >\n      {t('Create Team')}\n    </Button>\n  );\n\n  const teamRoute = routes.find(({path}) => path === 'teams/');\n  const urlPrefix = teamRoute\n    ? recreateRoute(teamRoute, {routes, params, stepBack: -2})\n    : '';\n\n  const title = t('Teams');\n\n  const [teamQuery, setTeamQuery] = useState('');\n  const {initiallyLoaded} = useTeams({provideUserTeams: true});\n  const {teams, onSearch} = useTeams();\n\n  const debouncedSearch = debounce(onSearch, DEFAULT_DEBOUNCE_DURATION);\n  function handleSearch(query: string) {\n    setTeamQuery(query);\n    debouncedSearch(query);\n  }\n\n  const filteredTeams = teams.filter(team =>\n    `#${team.slug}`.toLowerCase().includes(teamQuery.toLowerCase())\n  );\n  const [userTeams, otherTeams] = partition(filteredTeams, team => team.isMember);\n\n  return (\n    <div data-test-id=\"team-list\">\n      <SentryDocumentTitle title={title} orgSlug={organization.slug} />\n      <SettingsPageHeader title={title} action={action} />\n\n      <OrganizationAccessRequests\n        orgId={params.orgId}\n        requestList={requestList}\n        onRemoveAccessRequest={onRemoveAccessRequest}\n      />\n      <StyledSearchBar\n        placeholder={t('Search teams')}\n        onChange={handleSearch}\n        query={teamQuery}\n      />\n      <Panel>\n        <PanelHeader>{t('Your Teams')}</PanelHeader>\n        <PanelBody>\n          {initiallyLoaded ? (\n            <AllTeamsList\n              urlPrefix={urlPrefix}\n              organization={organization}\n              teamList={userTeams.filter(team => team.slug.includes(teamQuery))}\n              access={access}\n              openMembership={false}\n            />\n          ) : (\n            <LoadingIndicator />\n          )}\n        </PanelBody>\n      </Panel>\n      <Panel>\n        <PanelHeader>{t('Other Teams')}</PanelHeader>\n        <PanelBody>\n          <AllTeamsList\n            urlPrefix={urlPrefix}\n            organization={organization}\n            teamList={otherTeams}\n            access={access}\n            openMembership={\n              !!(features.has('open-membership') || access.has('org:write'))\n            }\n          />\n        </PanelBody>\n      </Panel>\n    </div>\n  );\n}\n\nconst StyledSearchBar = styled(SearchBar)`\n  margin-bottom: ${space(2)};\n`;\n\nexport default OrganizationTeams;\n","import {RouteComponentProps} from 'react-router';\n\nimport {loadStats} from 'app/actionCreators/projects';\nimport TeamActions from 'app/actions/teamActions';\nimport {Client} from 'app/api';\nimport {AccessRequest, Organization, Team} from 'app/types';\nimport withApi from 'app/utils/withApi';\nimport withOrganization from 'app/utils/withOrganization';\nimport AsyncView from 'app/views/asyncView';\n\nimport OrganizationTeams from './organizationTeams';\n\ntype Props = {\n  api: Client;\n  organization: Organization;\n  teams: Team[];\n} & RouteComponentProps<{orgId: string}, {}>;\n\ntype State = AsyncView['state'] & {\n  requestList: AccessRequest[];\n};\n\nclass OrganizationTeamsContainer extends AsyncView<Props, State> {\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {orgId} = this.props.params;\n\n    return [['requestList', `/organizations/${orgId}/access-requests/`]];\n  }\n\n  componentDidMount() {\n    this.fetchStats();\n  }\n\n  fetchStats() {\n    loadStats(this.props.api, {\n      orgId: this.props.params.orgId,\n      query: {\n        since: (new Date().getTime() / 1000 - 3600 * 24).toString(),\n        stat: 'generated',\n        group: 'project',\n      },\n    });\n  }\n\n  removeAccessRequest = (id: string, isApproved: boolean) => {\n    const requestToRemove = this.state.requestList.find(request => request.id === id);\n    this.setState(state => ({\n      requestList: state.requestList.filter(request => request.id !== id),\n    }));\n    if (isApproved && requestToRemove) {\n      const team = requestToRemove.team;\n      TeamActions.updateSuccess(team.slug, {\n        ...team,\n        memberCount: team.memberCount + 1,\n      });\n    }\n  };\n\n  renderBody() {\n    const {organization} = this.props;\n\n    if (!organization) {\n      return null;\n    }\n\n    return (\n      <OrganizationTeams\n        {...this.props}\n        access={new Set(organization.access)}\n        features={new Set(organization.features)}\n        organization={organization}\n        requestList={this.state.requestList}\n        onRemoveAccessRequest={this.removeAccessRequest}\n      />\n    );\n  }\n}\n\nexport {OrganizationTeamsContainer};\n\nexport default withApi(withOrganization(OrganizationTeamsContainer));\n"],"names":["SentryDocumentTitle","title","orgSlug","projectSlug","children","docTitle","recreateRoute","to","options","routes","params","location","stepBack","paths","map","path","lastRootIndex","routeIndex","indexOf","findLastIndex","slice","baseRoute","search","hash","fullRoute","join","replaceRouterParams","AsyncView","AsyncComponent","getTitle","render","this","renderComponent","AllTeamsRow","React","loading","error","async","team","props","joinTeam","successMessage","tct","slug","errorMessage","TeamActions","isPending","_err","api","organization","setState","Promise","resolve","reject","orgId","teamId","success","addSuccessMessage","addErrorMessage","Error","leaveTeam","urlPrefix","openMembership","display","avatarSize","description","tn","memberCount","canViewTeam","hasAccess","TeamPanelItem","TeamNameWrapper","TeamLink","Spacer","state","size","disabled","isMember","onClick","handleLeaveTeam","t","handleJoinTeam","handleRequestAccess","Link","space","withApi","PanelItem","AllTeamsList","teamList","access","teamNodes","length","canCreateTeam","has","root","noMargin","teamCreate","link","StyledButton","priority","openCreateTeamModal","Fragment","Button","p","theme","fontSizeLarge","OrganizationAccessRequests","accessRequestBusy","id","e","stopPropagation","handleAction","isApproved","onRemoveAccessRequest","requestPromise","method","data","requestList","member","requester","memberName","user","name","email","username","requesterName","StyledPanelItem","handleApprove","busy","handleDeny","OrganizationTeams","features","canCreateTeams","action","undefined","icon","isCircled","teamRoute","find","teamQuery","setTeamQuery","useState","initiallyLoaded","useTeams","provideUserTeams","teams","onSearch","debouncedSearch","debounce","DEFAULT_DEBOUNCE_DURATION","filteredTeams","filter","toLowerCase","includes","userTeams","otherTeams","partition","StyledSearchBar","placeholder","onChange","query","SearchBar","OrganizationTeamsContainer","requestToRemove","request","getEndpoints","componentDidMount","fetchStats","loadStats","since","Date","getTime","toString","stat","group","renderBody","Set","removeAccessRequest","withOrganization"],"sourceRoot":""}
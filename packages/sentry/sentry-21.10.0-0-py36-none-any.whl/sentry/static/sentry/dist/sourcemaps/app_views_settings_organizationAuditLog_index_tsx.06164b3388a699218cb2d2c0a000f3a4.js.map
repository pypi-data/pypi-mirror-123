{"version":3,"file":"chunks/app_views_settings_organizationAuditLog_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/organizationAuditLog/auditLogList.tsx","webpack:///./app/views/settings/organizationAuditLog/index.tsx"],"sourcesContent":["function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import * as React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent() as React.ReactChild}\n      </DocumentTitle>\n    );\n  }\n}\n","import styled from '@emotion/styled';\n\nimport UserAvatar from 'app/components/avatar/userAvatar';\nimport DateTime from 'app/components/dateTime';\nimport SelectField from 'app/components/forms/selectField';\nimport Pagination from 'app/components/pagination';\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'app/components/panels';\nimport Tooltip from 'app/components/tooltip';\nimport {t} from 'app/locale';\nimport overflowEllipsis from 'app/styles/overflowEllipsis';\nimport space from 'app/styles/space';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\n\nconst avatarStyle = {\n  width: 36,\n  height: 36,\n  marginRight: 8,\n};\n\ntype Props = {\n  entries: any[];\n  pageLinks: string;\n  eventType: string;\n  eventTypes: string[];\n  onEventSelect: (value: string) => void;\n};\n\nconst AuditLogList = ({\n  pageLinks,\n  entries,\n  eventType,\n  eventTypes,\n  onEventSelect,\n}: Props) => {\n  const hasEntries = entries && entries.length > 0;\n  const ipv4Length = 15;\n  const options = [\n    {value: '', label: t('Any action'), clearableVaue: false},\n    ...eventTypes.map(type => ({label: type, value: type, clearableValue: false})),\n  ];\n\n  const action = (\n    <form>\n      <SelectField\n        name=\"event\"\n        onChange={onEventSelect as SelectField['props']['onChange']}\n        value={eventType}\n        style={{width: 250}}\n        options={options}\n      />\n    </form>\n  );\n\n  return (\n    <div>\n      <SettingsPageHeader title={t('Audit Log')} action={action} />\n      <Panel>\n        <StyledPanelHeader disablePadding>\n          <div>{t('Member')}</div>\n          <div>{t('Action')}</div>\n          <div>{t('IP')}</div>\n          <div>{t('Time')}</div>\n        </StyledPanelHeader>\n\n        <PanelBody>\n          {!hasEntries && <EmptyMessage>{t('No audit entries available')}</EmptyMessage>}\n\n          {hasEntries &&\n            entries.map(entry => (\n              <StyledPanelItem center key={entry.id}>\n                <UserInfo>\n                  <div>\n                    {entry.actor.email && (\n                      <UserAvatar style={avatarStyle} user={entry.actor} />\n                    )}\n                  </div>\n                  <NameContainer>\n                    <Name data-test-id=\"actor-name\">\n                      {entry.actor.isSuperuser\n                        ? t('%s (Sentry Staff)', entry.actor.name)\n                        : entry.actor.name}\n                    </Name>\n                    <Note>{entry.note}</Note>\n                  </NameContainer>\n                </UserInfo>\n                <div>\n                  <MonoDetail>{entry.event}</MonoDetail>\n                </div>\n                <TimestampOverflow>\n                  <Tooltip\n                    title={entry.ipAddress}\n                    disabled={entry.ipAddress && entry.ipAddress.length <= ipv4Length}\n                  >\n                    <MonoDetail>{entry.ipAddress}</MonoDetail>\n                  </Tooltip>\n                </TimestampOverflow>\n                <TimestampInfo>\n                  <DateTime dateOnly date={entry.dateCreated} />\n                  <DateTime timeOnly format=\"LT zz\" date={entry.dateCreated} />\n                </TimestampInfo>\n              </StyledPanelItem>\n            ))}\n        </PanelBody>\n      </Panel>\n      {pageLinks && <Pagination pageLinks={pageLinks} />}\n    </div>\n  );\n};\n\nconst UserInfo = styled('div')`\n  display: flex;\n  line-height: 1.2;\n  font-size: 13px;\n  flex: 1;\n`;\n\nconst NameContainer = styled('div')`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst Name = styled('div')`\n  font-weight: 600;\n  font-size: 15px;\n`;\nconst Note = styled('div')`\n  font-size: 13px;\n  word-break: break-word;\n`;\nconst TimestampOverflow = styled('div')`\n  ${overflowEllipsis};\n`;\n\nconst MonoDetail = styled('code')`\n  font-size: ${p => p.theme.fontSizeMedium};\n`;\n\nconst StyledPanelHeader = styled(PanelHeader)`\n  display: grid;\n  grid-template-columns: 1fr max-content 130px 150px;\n  grid-column-gap: ${space(2)};\n  padding: ${space(2)};\n`;\n\nconst StyledPanelItem = styled(PanelItem)`\n  display: grid;\n  grid-template-columns: 1fr max-content 130px 150px;\n  grid-column-gap: ${space(2)};\n  padding: ${space(2)};\n`;\n\nconst TimestampInfo = styled('div')`\n  display: grid;\n  grid-template-rows: auto auto;\n  grid-gap: ${space(1)};\n  font-size: ${p => p.theme.fontSizeMedium};\n`;\n\nexport default AuditLogList;\n","import {browserHistory, RouteComponentProps} from 'react-router';\n\nimport {t} from 'app/locale';\nimport {Organization} from 'app/types';\nimport routeTitleGen from 'app/utils/routeTitle';\nimport withOrganization from 'app/utils/withOrganization';\nimport AsyncView from 'app/views/asyncView';\n\nimport AuditLogList from './auditLogList';\n\n// Please keep this list sorted\nconst EVENT_TYPES = [\n  'member.invite',\n  'member.add',\n  'member.accept-invite',\n  'member.remove',\n  'member.edit',\n  'member.join-team',\n  'member.leave-team',\n  'member.pending',\n  'team.create',\n  'team.edit',\n  'team.remove',\n  'project.create',\n  'project.edit',\n  'project.remove',\n  'project.set-public',\n  'project.set-private',\n  'project.request-transfer',\n  'project.accept-transfer',\n  'org.create',\n  'org.edit',\n  'org.remove',\n  'org.restore',\n  'tagkey.remove',\n  'projectkey.create',\n  'projectkey.edit',\n  'projectkey.remove',\n  'projectkey.enable',\n  'projectkey.disable',\n  'sso.enable',\n  'sso.disable',\n  'sso.edit',\n  'sso-identity.link',\n  'api-key.create',\n  'api-key.edit',\n  'api-key.remove',\n  'rule.create',\n  'rule.edit',\n  'rule.remove',\n  'servicehook.create',\n  'servicehook.edit',\n  'servicehook.remove',\n  'servicehook.enable',\n  'servicehook.disable',\n  'integration.add',\n  'integration.edit',\n  'integration.remove',\n  'ondemand.edit',\n  'trial.started',\n  'plan.changed',\n  'plan.cancelled',\n];\n\ntype Props = RouteComponentProps<{orgId: string}, {}> &\n  AsyncView['props'] & {\n    organization: Organization;\n  };\n\ntype State = AsyncView['state'];\n\nclass OrganizationAuditLog extends AsyncView<Props, State> {\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [\n      [\n        'entryList',\n        `/organizations/${this.props.params.orgId}/audit-logs/`,\n        {\n          query: this.props.location.query,\n        },\n      ],\n    ];\n  }\n\n  getTitle() {\n    return routeTitleGen(t('Audit Log'), this.props.organization.slug, false);\n  }\n\n  handleEventSelect = (value: string) => {\n    // Dont update if event has not changed\n    if (this.props.location.query.event === value) {\n      return;\n    }\n\n    browserHistory.push({\n      pathname: this.props.location.pathname,\n      search: `?event=${value}`,\n    });\n  };\n\n  renderBody() {\n    const currentEventType = this.props.location.query.event;\n    return (\n      <AuditLogList\n        entries={this.state.entryList}\n        pageLinks={this.state.entryListPageLinks}\n        eventType={currentEventType}\n        eventTypes={EVENT_TYPES}\n        onEventSelect={this.handleEventSelect}\n        {...this.props}\n      />\n    );\n  }\n}\n\nexport default withOrganization(OrganizationAuditLog);\n"],"names":["routeName","orgSlug","withSentry","projectSlug","tmplBase","tmpl","AsyncView","AsyncComponent","getTitle","render","title","this","renderComponent","avatarStyle","width","height","marginRight","AuditLogList","pageLinks","entries","eventType","eventTypes","onEventSelect","hasEntries","length","options","value","label","t","clearableVaue","map","type","clearableValue","action","name","onChange","style","StyledPanelHeader","disablePadding","entry","StyledPanelItem","center","UserInfo","actor","email","user","NameContainer","Name","isSuperuser","Note","note","MonoDetail","event","TimestampOverflow","ipAddress","disabled","TimestampInfo","dateOnly","date","dateCreated","timeOnly","format","id","overflowEllipsis","p","theme","fontSizeMedium","PanelHeader","space","PanelItem","EVENT_TYPES","OrganizationAuditLog","props","location","query","browserHistory","pathname","search","getEndpoints","params","orgId","routeTitleGen","organization","slug","renderBody","currentEventType","state","entryList","entryListPageLinks","handleEventSelect","withOrganization"],"sourceRoot":""}
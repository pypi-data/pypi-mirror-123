{"version":3,"file":"chunks/app_components_modals_demoSignUp_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/highlightModalContainer.tsx","webpack:///./app/components/modals/demoSignUp.tsx","webpack:///./app/utils/analytics/performanceAnalyticsEvents.tsx","webpack:///./app/utils/analytics/trackAdvancedAnalyticsEvent.tsx","webpack:///./app/utils/analytics/growthAnalyticsEvents.tsx","webpack:///./app/utils/analytics/issueAnalyticsEvents.tsx","webpack:///./app/utils/analytics/dashboardsAnalyticsEvents.tsx","webpack:///./app/utils/analytics/discoverAnalyticsEvents.tsx","webpack:///./app/utils/demoMode.tsx"],"sourcesContent":["import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport BottomLeft from 'sentry-images/pattern/highlight-bottom-left.svg';\nimport TopRight from 'sentry-images/pattern/highlight-top-right.svg';\n\ntype Props = {\n  topWidth: string;\n  bottomWidth: string;\n  children: React.ReactNode;\n};\n\nexport default function HighlightModalContainer({\n  topWidth,\n  bottomWidth,\n  children,\n}: Props) {\n  return (\n    <Fragment>\n      <PositionTopRight src={TopRight} width={topWidth} />\n      {children}\n      <PositionBottomLeft src={BottomLeft} width={bottomWidth} />\n    </Fragment>\n  );\n}\n\nconst PositionTopRight = styled('img')<{width: string}>`\n  position: absolute;\n  width: ${p => p.width};\n  right: 0;\n  top: 0;\n  pointer-events: none;\n`;\n\nconst PositionBottomLeft = styled('img')<{width: string}>`\n  position: absolute;\n  width: ${p => p.width};\n  bottom: 0;\n  left: 0;\n  pointer-events: none;\n`;\n\nHighlightModalContainer.defaultProps = {\n  topWidth: '400px',\n  bottomWidth: '200px',\n};\n","import {css} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport {ModalRenderProps} from 'app/actionCreators/modal';\nimport Button from 'app/components/button';\nimport ButtonBar from 'app/components/buttonBar';\nimport HighlightModalContainer from 'app/components/highlightModalContainer';\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\nimport trackAdvancedAnalyticsEvent from 'app/utils/analytics/trackAdvancedAnalyticsEvent';\nimport {emailQueryParameter, extraQueryParameter} from 'app/utils/demoMode';\n\ntype Props = ModalRenderProps;\n\nconst DemoSignUpModal = ({closeModal}: Props) => {\n  const queryParameter = emailQueryParameter();\n  const getStartedExtraParameter = extraQueryParameter(true);\n  const signupUrl = `https://sentry.io/signup/${queryParameter}${getStartedExtraParameter}`;\n\n  return (\n    <HighlightModalContainer>\n      <div>\n        <TrialCheckInfo>\n          <Subheader>{t('Sandbox Signup')}</Subheader>\n          <h2>{t('Hey, love what you see?')}</h2>\n          <p>\n            {t(\n              'Sign up now to setup your own project to see problems within your code and learn how to quickly improve your project.'\n            )}\n          </p>\n        </TrialCheckInfo>\n        <StyledButtonBar gap={2}>\n          <Button\n            priority=\"primary\"\n            href={signupUrl}\n            onClick={() =>\n              trackAdvancedAnalyticsEvent('growth.demo_modal_clicked_signup', {\n                organization: null,\n              })\n            }\n          >\n            {t('Sign up now')}\n          </Button>\n          <Button\n            priority=\"default\"\n            onClick={() => {\n              trackAdvancedAnalyticsEvent('growth.demo_modal_clicked_continue', {\n                organization: null,\n              });\n              closeModal();\n            }}\n          >\n            {t('Keep Exploring')}\n          </Button>\n        </StyledButtonBar>\n      </div>\n    </HighlightModalContainer>\n  );\n};\n\nconst TrialCheckInfo = styled('div')`\n  padding: ${space(3)} 0;\n  p {\n    font-size: ${p => p.theme.fontSizeMedium};\n    margin: 0;\n  }\n  h2 {\n    font-size: 1.5em;\n  }\n`;\n\nexport const modalCss = css`\n  width: 100%;\n  max-width: 730px;\n  [role='document'] {\n    position: relative;\n    padding: 70px 80px;\n    overflow: hidden;\n  }\n`;\n\nconst Subheader = styled('h4')`\n  margin-bottom: ${space(2)};\n  text-transform: uppercase;\n  font-weight: bold;\n  color: ${p => p.theme.purple300};\n  font-size: ${p => p.theme.fontSizeExtraSmall};\n`;\n\nconst StyledButtonBar = styled(ButtonBar)`\n  margin-top: ${space(2)};\n  max-width: fit-content;\n`;\n\nexport default DemoSignUpModal;\n","import {PlatformKey} from 'app/data/platformCategories';\n\ntype SampleTransactionParam = {\n  platform?: PlatformKey;\n};\n\ntype PerformanceTourParams = {\n  step: number;\n  duration: number;\n};\n\nexport type PerformanceEventParameters = {\n  'performance_views.create_sample_transaction': SampleTransactionParam;\n  'performance_views.tour.start': {};\n  'performance_views.tour.advance': PerformanceTourParams;\n  'performance_views.tour.close': PerformanceTourParams;\n  'performance_views.landingv2.transactions.sort': {\n    field?: string;\n    direction?: string;\n  };\n  'performance_views.overview.navigate.summary': {};\n  'performance_views.overview.cellaction': {action?: string};\n};\n\nexport type PerformanceEventKey = keyof PerformanceEventParameters;\n\nexport const performanceEventMap: Record<PerformanceEventKey, string | null> = {\n  'performance_views.create_sample_transaction': 'Growth: Performance Sample Transaction',\n  'performance_views.tour.start': 'Performance Views: Tour Start',\n  'performance_views.tour.advance': 'Performance Views: Tour Advance',\n  'performance_views.tour.close': 'Performance Views: Tour Close',\n  'performance_views.landingv2.transactions.sort':\n    'Performance Views: Landing Transactions Sorted',\n  'performance_views.overview.navigate.summary':\n    'Performance Views: Overview view summary',\n  'performance_views.overview.cellaction': 'Performance Views: Cell Action Clicked',\n};\n","import {dashboardsEventMap, DashboardsEventParameters} from './dashboardsAnalyticsEvents';\nimport {discoverEventMap, DiscoverEventParameters} from './discoverAnalyticsEvents';\nimport {growthEventMap, GrowthEventParameters} from './growthAnalyticsEvents';\nimport {issueEventMap, IssueEventParameters} from './issueAnalyticsEvents';\nimport makeAnalyticsFunction from './makeAnalyticsFunction';\nimport {\n  performanceEventMap,\n  PerformanceEventParameters,\n} from './performanceAnalyticsEvents';\n\ntype EventParameters = GrowthEventParameters &\n  IssueEventParameters &\n  PerformanceEventParameters &\n  DashboardsEventParameters &\n  DiscoverEventParameters;\n\nconst allEventMap = {\n  ...growthEventMap,\n  ...issueEventMap,\n  ...performanceEventMap,\n  ...dashboardsEventMap,\n  ...discoverEventMap,\n};\n\n/**\n * Generic typed analytics function for growth, issue, and performance events.\n * Can split up analytics functions to a smaller set of events like we do for trackIntegrationAnalytics\n */\nconst trackAdvancedAnalyticsEvent = makeAnalyticsFunction<EventParameters>(allEventMap);\n\nexport default trackAdvancedAnalyticsEvent;\n","import {PlatformKey} from 'app/data/platformCategories';\n\ntype MobilePromptBannerParams = {\n  matchedUserAgentString: string;\n};\n\ntype ShowParams = MobilePromptBannerParams & {\n  matchedUserAgentString: string;\n  mobileEventBrowserName: string;\n  mobileEventClientOsName: string;\n};\n\ntype PlatformParam = {\n  platform: PlatformKey;\n};\n\ntype PlatformCategory = {\n  category: string;\n  source?: string;\n};\n\ntype PlatformPickerParam = {\n  platform_id: string;\n  source?: string;\n};\n\ntype PlatformSearchParam = {\n  search: string;\n  num_results: number;\n  source?: string;\n};\n\ntype SampleEventParam = {\n  platform?: PlatformKey;\n};\n\ntype InviteRequestParam = {\n  member_id: number;\n  invite_status: string;\n};\n\n// define the event key to payload mappings\nexport type GrowthEventParameters = {\n  'growth.show_mobile_prompt_banner': ShowParams;\n  'growth.dismissed_mobile_prompt_banner': MobilePromptBannerParams;\n  'growth.opened_mobile_project_suggest_modal': MobilePromptBannerParams;\n  'growth.clicked_mobile_prompt_setup_project': MobilePromptBannerParams;\n  'growth.clicked_mobile_prompt_ask_teammate': MobilePromptBannerParams;\n  'growth.submitted_mobile_prompt_ask_teammate': MobilePromptBannerParams;\n  'growth.demo_click_get_started': {is_upgrade: boolean};\n  'growth.demo_click_docs': {};\n  'growth.demo_click_request_demo': {};\n  'growth.onboarding_load_choose_platform': {};\n  'growth.onboarding_set_up_your_project': PlatformParam;\n  'growth.select_platform': PlatformPickerParam;\n  'growth.platformpicker_category': PlatformCategory;\n  'growth.platformpicker_search': PlatformSearchParam;\n  'growth.onboarding_start_onboarding': {};\n  'growth.onboarding_take_to_error': {};\n  'growth.onboarding_view_full_docs': {};\n  'growth.onboarding_view_sample_event': SampleEventParam;\n  'invite_request.approved': InviteRequestParam;\n  'invite_request.denied': InviteRequestParam;\n  'growth.demo_modal_clicked_signup': {};\n  'growth.demo_modal_clicked_continue': {};\n  'growth.sample_transaction_docs_link_clicked': {\n    project_id: string;\n  };\n  'growth.sample_error_onboarding_link_clicked': {\n    project_id: string;\n    platform?: string;\n  };\n  'growth.issue_open_in_discover_btn_clicked': {};\n};\n\ntype GrowthAnalyticsKey = keyof GrowthEventParameters;\n\nexport const growthEventMap: Record<GrowthAnalyticsKey, string> = {\n  'growth.show_mobile_prompt_banner': 'Growth: Show Mobile Prompt Banner',\n  'growth.dismissed_mobile_prompt_banner': 'Growth: Dismissed Mobile Prompt Banner',\n  'growth.opened_mobile_project_suggest_modal':\n    'Growth: Open Mobile Project Suggest Modal',\n  'growth.clicked_mobile_prompt_setup_project':\n    'Growth: Clicked Mobile Prompt Setup Project',\n  'growth.clicked_mobile_prompt_ask_teammate':\n    'Growth: Clicked Mobile Prompt Ask Teammate',\n  'growth.submitted_mobile_prompt_ask_teammate':\n    'Growth: Submitted Mobile Prompt Ask Teammate',\n  'growth.demo_click_get_started': 'Growth: Demo Click Get Started',\n  'growth.demo_click_docs': 'Growth: Demo Click Docs',\n  'growth.demo_click_request_demo': 'Growth: Demo Click Request Demo',\n  'growth.onboarding_load_choose_platform':\n    'Growth: Onboarding Load Choose Platform Page',\n  'growth.onboarding_set_up_your_project': 'Growth: Onboarding Click Set Up Your Project',\n  'growth.select_platform': 'Growth: Onboarding Choose Platform',\n  'growth.platformpicker_category': 'Growth: Onboarding Platform Category',\n  'growth.platformpicker_search': 'Growth: Onboarding Platform Search',\n  'growth.onboarding_start_onboarding': 'Growth: Onboarding Start Onboarding',\n  'growth.onboarding_take_to_error': 'Growth: Onboarding Take to Error',\n  'growth.onboarding_view_full_docs': 'Growth: Onboarding View Full Docs',\n  'growth.onboarding_view_sample_event': 'Growth: Onboarding View Sample Event',\n  'invite_request.approved': 'Invite Request Approved',\n  'invite_request.denied': 'Invite Request Denied',\n  'growth.demo_modal_clicked_signup': 'Growth: Demo Modal Clicked Signup',\n  'growth.demo_modal_clicked_continue': 'Growth: Demo Modal Clicked Continue',\n  'growth.sample_transaction_docs_link_clicked':\n    'Growth: Sample Transacton Docs Link Clicked',\n  'growth.sample_error_onboarding_link_clicked':\n    'Growth: Sample Transacton Onboarding Link Clicked',\n  'growth.issue_open_in_discover_btn_clicked':\n    'Growth: Open in Discover Button in Issue Details clicked',\n};\n","export type IssueEventParameters = {\n  'event_cause.viewed': {\n    project_id?: string;\n    platform?: string;\n  };\n  'event_cause.docs_clicked': {};\n  'event_cause.snoozed': {};\n  'event_cause.dismissed': {};\n};\n\nexport type IssueEventKey = keyof IssueEventParameters;\n\nexport const issueEventMap: Record<IssueEventKey, string | null> = {\n  'event_cause.viewed': null, // send to reload only due to high event volume\n  'event_cause.docs_clicked': 'Event Cause Docs Clicked',\n  'event_cause.snoozed': 'Event Cause Snoozed',\n  'event_cause.dismissed': 'Event Cause Dismissed',\n};\n","export type DashboardsEventParameters = {\n  'dashboards_views.add_widget_modal.change': {\n    from: string;\n    field: string;\n    value: string;\n  };\n  'dashboards_views.query_selector.opened': {\n    widget_type: string;\n  };\n  'dashboards_views.query_selector.selected': {\n    widget_type: string;\n  };\n};\n\nexport type DashboardsEventKey = keyof DashboardsEventParameters;\n\nexport const dashboardsEventMap: Record<DashboardsEventKey, string | null> = {\n  'dashboards_views.add_widget_modal.change':\n    'Dashboards2: Field changed in Add Widget Modal',\n  'dashboards_views.query_selector.opened':\n    'Dashboards2: Query Selector opened for Widget',\n  'dashboards_views.query_selector.selected':\n    'Dashboards2: Query selected in Query Selector',\n};\n","export type DiscoverEventParameters = {\n  'discover_views.add_to_dashboard.modal_open': {saved_query: boolean};\n  'discover_views.add_to_dashboard.confirm': {};\n};\n\nexport type DiscoverEventKey = keyof DiscoverEventParameters;\n\nexport const discoverEventMap: Record<DiscoverEventKey, string | null> = {\n  'discover_views.add_to_dashboard.modal_open':\n    'Discover2: Add to Dashboard modal opened',\n  'discover_views.add_to_dashboard.confirm':\n    'Discover2: Add to Dashboard modal form submitted',\n};\n","import getCookie from 'app/utils/getCookie';\n\n// return email query parameter\nexport function emailQueryParameter(): string {\n  const email = localStorage.getItem('email');\n  const queryParameter = email ? `?email=${email}` : '';\n  return queryParameter;\n}\n\n// return extra query depending, depending on if used in getStartedUrl\nexport function extraQueryParameter(getStarted: boolean): string {\n  const email = localStorage.getItem('email');\n  const extraQueryString = getCookie('extra_query_string');\n  // cookies that have = sign are quotes so extra quotes need to be removed\n  const extraQuery = extraQueryString ? extraQueryString.replaceAll('\"', '') : '';\n\n  if (getStarted) {\n    const emailSeparator = email ? '&' : '?';\n    const getStartedSeparator = extraQueryString ? emailSeparator : '';\n    return getStartedSeparator + extraQuery;\n  }\n  const extraSeparator = extraQueryString ? `?` : '';\n  return extraSeparator + extraQuery;\n}\n"],"names":["HighlightModalContainer","topWidth","bottomWidth","children","Fragment","PositionTopRight","src","TopRight","width","PositionBottomLeft","BottomLeft","p","defaultProps","DemoSignUpModal","closeModal","queryParameter","emailQueryParameter","getStartedExtraParameter","extraQueryParameter","signupUrl","TrialCheckInfo","Subheader","t","StyledButtonBar","gap","priority","href","onClick","trackAdvancedAnalyticsEvent","organization","space","theme","fontSizeMedium","modalCss","purple300","fontSizeExtraSmall","ButtonBar","makeAnalyticsFunction","email","localStorage","getItem","getStarted","extraQueryString","getCookie","extraQuery","replaceAll","emailSeparator"],"sourceRoot":""}
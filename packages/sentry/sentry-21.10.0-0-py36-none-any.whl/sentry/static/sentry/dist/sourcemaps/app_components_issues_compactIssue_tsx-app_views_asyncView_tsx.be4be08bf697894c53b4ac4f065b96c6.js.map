{"version":3,"file":"chunks/app_components_issues_compactIssue_tsx-app_views_asyncView_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/events/errorLevel.tsx","webpack:///./app/components/issues/compactIssue.tsx","webpack:///./app/views/asyncView.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nimport {Level} from 'app/types';\n\nconst DEFAULT_SIZE = '13px';\n\nfunction getLevelColor({level = '', theme}) {\n  const COLORS = {\n    error: theme.orange400,\n    info: theme.blue300,\n    warning: theme.orange300,\n    fatal: theme.red300,\n    sample: theme.purple300,\n  };\n\n  return `background-color: ${COLORS[level] || theme.orange400};`;\n}\n\ntype Props = {\n  size?: string;\n  level?: Level;\n};\n\nconst ErrorLevel = styled('span')<Props>`\n  padding: 0;\n  position: relative;\n  width: ${p => p.size || DEFAULT_SIZE};\n  height: ${p => p.size || DEFAULT_SIZE};\n  text-indent: -9999em;\n  display: inline-block;\n  border-radius: 50%;\n  flex-shrink: 0;\n\n  ${getLevelColor}\n`;\n\nexport default ErrorLevel;\n","import {Component, Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport {bulkUpdate} from 'app/actionCreators/group';\nimport {addLoadingMessage, clearIndicators} from 'app/actionCreators/indicator';\nimport {Client} from 'app/api';\nimport EventOrGroupTitle from 'app/components/eventOrGroupTitle';\nimport ErrorLevel from 'app/components/events/errorLevel';\nimport Link from 'app/components/links/link';\nimport {PanelItem} from 'app/components/panels';\nimport {IconChat, IconMute, IconStar} from 'app/icons';\nimport {t} from 'app/locale';\nimport GroupStore from 'app/stores/groupStore';\nimport space from 'app/styles/space';\nimport {BaseGroup, Organization} from 'app/types';\nimport {getMessage} from 'app/utils/events';\nimport {Aliases} from 'app/utils/theme';\nimport withApi from 'app/utils/withApi';\nimport withOrganization from 'app/utils/withOrganization';\n\ntype HeaderProps = {\n  organization: Organization;\n  projectId: string;\n  data: BaseGroup;\n  eventId?: string;\n};\n\nclass CompactIssueHeader extends Component<HeaderProps> {\n  render() {\n    const {data, organization, projectId, eventId} = this.props;\n\n    const basePath = `/organizations/${organization.slug}/issues/`;\n\n    const issueLink = eventId\n      ? `/organizations/${organization.slug}/projects/${projectId}/events/${eventId}/`\n      : `${basePath}${data.id}/`;\n\n    const commentColor: keyof Aliases =\n      data.subscriptionDetails && data.subscriptionDetails.reason === 'mentioned'\n        ? 'success'\n        : 'textColor';\n\n    return (\n      <Fragment>\n        <IssueHeaderMetaWrapper>\n          <StyledErrorLevel size=\"12px\" level={data.level} title={data.level} />\n          <h3 className=\"truncate\">\n            <IconLink to={issueLink || ''}>\n              {data.status === 'ignored' && <IconMute size=\"xs\" />}\n              {data.isBookmarked && <IconStar isSolid size=\"xs\" />}\n              <EventOrGroupTitle data={data} />\n            </IconLink>\n          </h3>\n        </IssueHeaderMetaWrapper>\n        <div className=\"event-extra\">\n          <span className=\"project-name\">\n            <strong>{data.project.slug}</strong>\n          </span>\n          {data.numComments !== 0 && (\n            <span>\n              <IconLink to={`${basePath}${data.id}/activity/`} className=\"comments\">\n                <IconChat size=\"xs\" color={commentColor} />\n                <span className=\"tag-count\">{data.numComments}</span>\n              </IconLink>\n            </span>\n          )}\n          <span className=\"culprit\">{getMessage(data)}</span>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\ntype GroupTypes = ReturnType<typeof GroupStore.get>;\n\n/**\n * Type assertion to disambiguate GroupTypes\n *\n * The GroupCollapseRelease type isn't compatible with BaseGroup\n */\nfunction isGroup(maybe: GroupTypes): maybe is BaseGroup {\n  return (maybe as BaseGroup).status !== undefined;\n}\n\ntype Props = {\n  api: Client;\n  id: string;\n  organization: Organization;\n  eventId?: string;\n  data?: BaseGroup;\n};\n\ntype State = {\n  issue?: GroupTypes;\n};\n\nclass CompactIssue extends Component<Props, State> {\n  state: State = {\n    issue: this.props.data || GroupStore.get(this.props.id),\n  };\n\n  componentWillReceiveProps(nextProps: Props) {\n    if (nextProps.id !== this.props.id) {\n      this.setState({\n        issue: GroupStore.get(this.props.id),\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.listener();\n  }\n\n  listener = GroupStore.listen(\n    (itemIds: Set<string>) => this.onGroupChange(itemIds),\n    undefined\n  );\n\n  onGroupChange(itemIds: Set<string>) {\n    if (!itemIds.has(this.props.id)) {\n      return;\n    }\n    const id = this.props.id;\n    const issue = GroupStore.get(id);\n    this.setState({\n      issue,\n    });\n  }\n\n  onUpdate(data: Record<string, string>) {\n    const issue = this.state.issue;\n    if (!issue) {\n      return;\n    }\n    addLoadingMessage(t('Saving changes\\u2026'));\n\n    bulkUpdate(\n      this.props.api,\n      {\n        orgId: this.props.organization.slug,\n        projectId: issue.project.slug,\n        itemIds: [issue.id],\n        data,\n      },\n      {\n        complete: () => {\n          clearIndicators();\n        },\n      }\n    );\n  }\n\n  render() {\n    const issue = this.state.issue;\n    const {organization} = this.props;\n    if (!isGroup(issue)) {\n      return null;\n    }\n\n    let className = 'issue';\n    if (issue.isBookmarked) {\n      className += ' isBookmarked';\n    }\n    if (issue.hasSeen) {\n      className += ' hasSeen';\n    }\n    if (issue.status === 'resolved') {\n      className += ' isResolved';\n    }\n    if (issue.status === 'ignored') {\n      className += ' isIgnored';\n    }\n\n    return (\n      <IssueRow className={className}>\n        <CompactIssueHeader\n          data={issue}\n          organization={organization}\n          projectId={issue.project.slug}\n          eventId={this.props.eventId}\n        />\n        {this.props.children}\n      </IssueRow>\n    );\n  }\n}\n\nexport {CompactIssue};\nexport default withApi(withOrganization(CompactIssue));\n\nconst IssueHeaderMetaWrapper = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst StyledErrorLevel = styled(ErrorLevel)`\n  display: block;\n  margin-right: ${space(1)};\n`;\n\nconst IconLink = styled(Link)`\n  & > svg {\n    margin-right: ${space(0.5)};\n  }\n`;\n\nconst IssueRow = styled(PanelItem)`\n  padding-top: ${space(1.5)};\n  padding-bottom: ${space(0.75)};\n  flex-direction: column;\n`;\n","import * as React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent() as React.ReactChild}\n      </DocumentTitle>\n    );\n  }\n}\n"],"names":["DEFAULT_SIZE","getLevelColor","level","theme","COLORS","error","orange400","info","blue300","warning","orange300","fatal","red300","sample","purple300","p","size","CompactIssueHeader","Component","render","data","organization","projectId","eventId","this","props","basePath","slug","issueLink","id","commentColor","subscriptionDetails","reason","Fragment","IssueHeaderMetaWrapper","StyledErrorLevel","title","className","IconLink","to","status","isBookmarked","isSolid","project","numComments","color","getMessage","CompactIssue","issue","GroupStore","itemIds","onGroupChange","undefined","componentWillReceiveProps","nextProps","setState","componentWillUnmount","listener","has","onUpdate","state","addLoadingMessage","t","bulkUpdate","api","orgId","complete","clearIndicators","hasSeen","IssueRow","children","withApi","withOrganization","ErrorLevel","space","Link","PanelItem","AsyncView","AsyncComponent","getTitle","renderComponent"],"sourceRoot":""}
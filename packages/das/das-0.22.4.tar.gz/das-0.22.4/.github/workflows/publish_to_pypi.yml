name: Publish to PyPI using flit

on:
  release:
    types:
      - published
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
      tags:
        description: 'manual run'

jobs:

  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # python-version: [3.6, 3.7, 3.8, 3.9]
        # os: [ubuntu-latest, windows-latest, macOS-latest]
        python-version: [3.8]
        os: [ubuntu-latest]

    steps:
      - name: Checkout source
        uses: actions/checkout@v2

      # - name: Set up Python ${{ matrix.python-version }}
      #   uses: actions/setup-python@v2
      #   with:
      #     python-version: ${{ matrix.python-version }}

      - name: Setup Mamba
        # https://github.com/conda-incubator/setup-miniconda
        uses: conda-incubator/setup-miniconda@v2.0.1
        with:
          python-version: 3.8
          mamba-version: "*"
          channels: conda-forge,ncb,anaconda
          use-only-tar-bz2: true # IMPORTANT: This needs to be set for caching to work properly!
#           environment-file: env/das-env.yml
#           activate-environment: das-env
          use-mamba: true

      - name: Installation (deps and package)
        shell: bash -l {0}
        run: |
          conda install pytest flit -c conda-forge

      - name: Install libsndfile (Linux only)
        if: runner.os == 'Linux'
        run: sudo apt-get install libsndfile1

      - name: Run pytest
        shell: bash -l {0}
        run: |
          python -m pip install -e .
          python -m pip install xarray-behave[gui] tensorflow
          python -m pytest ./tests

      - name: Test CLI
        shell: bash -l {0}
        run: |
          das --help
          das train --help
          das version

  publish_to_pypi:
    name: Publish to PyPi
    needs: [tests]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout source
      uses: actions/checkout@v2

    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8

    - name: Install flit
      shell: bash -l {0}
      run: |
        pip install flit~=3.0

    - name: Build and publish
      shell: bash -l {0}
      run: |
        flit publish
      env:
        FLIT_USERNAME: ${{ secrets.FLIT_USERNAME }}
        FLIT_PASSWORD: ${{ secrets.FLIT_PASSWORD }}

#   publish_to_anaconda:
#     name: Publish to Anaconda.org
#     needs: [tests]

# -*- coding: utf-8 -*-

"""
coingeckoapiv3testing

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

import json
import dateutil.parser

from tests.controllers.controller_test_base import ControllerTestBase
from tests.test_helper import TestHelper
from tests.http_response_catcher import HttpResponseCatcher
from coingeckoapiv3testing.api_helper import APIHelper
from coingeckoapiv3testing.controllers.derivatives_controller import DerivativesController


class DerivativesControllerTests(ControllerTestBase):

    @classmethod
    def setUpClass(cls):
        super(DerivativesControllerTests, cls).setUpClass()
        cls.response_catcher = HttpResponseCatcher()
        cls.controller = DerivativesController(cls.config, cls.response_catcher)

    # List all derivative tickers
    def test_listallderivativetickers(self):
        # Parameters for the API call
        include_tickers = None

        # Perform the API call through the SDK function
        self.controller.listallderivativetickers(include_tickers)

        # Test response code
        self.assertEquals(self.response_catcher.response.status_code, 200)

    # List all derivative exchanges
    def test_listallderivativeexchanges(self):
        # Parameters for the API call
        order = None
        per_page = None
        page = None

        # Perform the API call through the SDK function
        self.controller.listallderivativeexchanges(order, per_page, page)

        # Test response code
        self.assertEquals(self.response_catcher.response.status_code, 200)

    # List all derivative exchanges name and identifier
    def test_listallderivativeexchangesnameandidentifier(self):

        # Perform the API call through the SDK function
        self.controller.listallderivativeexchangesnameandidentifier()

        # Test response code
        self.assertEquals(self.response_catcher.response.status_code, 200)


{"version":3,"file":"73e5c4c0.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8EA","sources":["webpack://home-assistant-frontend/./src/panels/mailbox/ha-dialog-show-audio-message.js"],"sourcesContent":["import \"@material/mwc-button\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\n/* eslint-plugin-disable lit */\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\nimport \"../../components/dialog/ha-paper-dialog\";\nimport \"../../components/ha-circular-progress\";\nimport \"../../components/ha-icon\";\nimport \"../../components/ha-icon-button\";\nimport LocalizeMixin from \"../../mixins/localize-mixin\";\nimport \"../../styles/polymer-ha-style-dialog\";\n\n/*\n * @appliesMixin LocalizeMixin\n */\nclass HaDialogShowAudioMessage extends LocalizeMixin(PolymerElement) {\n  static get template() {\n    return html`\n      <style include=\"ha-style-dialog\">\n        .error {\n          color: red;\n        }\n        @media all and (max-width: 500px) {\n          ha-paper-dialog {\n            margin: 0;\n            width: 100%;\n            max-height: calc(100% - var(--header-height));\n\n            position: fixed !important;\n            bottom: 0px;\n            left: 0px;\n            right: 0px;\n            overflow: scroll;\n            border-bottom-left-radius: 0px;\n            border-bottom-right-radius: 0px;\n          }\n        }\n\n        ha-paper-dialog {\n          border-radius: 2px;\n        }\n        ha-paper-dialog p {\n          color: var(--secondary-text-color);\n        }\n\n        .icon {\n          float: right;\n        }\n      </style>\n      <ha-paper-dialog\n        id=\"mp3dialog\"\n        with-backdrop\n        opened=\"{{_opened}}\"\n        on-opened-changed=\"_openedChanged\"\n      >\n        <h2>\n          [[localize('ui.panel.mailbox.playback_title')]]\n          <div class=\"icon\">\n            <template is=\"dom-if\" if=\"[[_loading]]\">\n              <ha-circular-progress active></ha-circular-progress>\n            </template>\n            <ha-icon-button id=\"delicon\" on-click=\"openDeleteDialog\">\n              <ha-icon icon=\"hass:delete\"></ha-icon>\n            </ha-icon-button>\n          </div>\n        </h2>\n        <div id=\"transcribe\"></div>\n        <div>\n          <template is=\"dom-if\" if=\"[[_errorMsg]]\">\n            <div class=\"error\">[[_errorMsg]]</div>\n          </template>\n          <audio id=\"mp3\" preload=\"none\" controls>\n            <source id=\"mp3src\" src=\"\" type=\"audio/mpeg\" />\n          </audio>\n        </div>\n      </ha-paper-dialog>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n\n      _currentMessage: Object,\n\n      // Error message when can't talk to server etc\n      _errorMsg: String,\n\n      _loading: {\n        type: Boolean,\n        value: false,\n      },\n\n      _opened: {\n        type: Boolean,\n        value: false,\n      },\n    };\n  }\n\n  showDialog({ hass, message }) {\n    this.hass = hass;\n    this._errorMsg = null;\n    this._currentMessage = message;\n    this._opened = true;\n    this.$.transcribe.innerText = message.message;\n    const platform = message.platform;\n    const mp3 = this.$.mp3;\n    if (platform.has_media) {\n      mp3.style.display = \"\";\n      this._showLoading(true);\n      mp3.src = null;\n      const url = `/api/mailbox/media/${platform.name}/${message.sha}`;\n      this.hass\n        .fetchWithAuth(url)\n        .then((response) => {\n          if (response.ok) {\n            return response.blob();\n          }\n          return Promise.reject({\n            status: response.status,\n            statusText: response.statusText,\n          });\n        })\n        .then((blob) => {\n          this._showLoading(false);\n          mp3.src = window.URL.createObjectURL(blob);\n          mp3.play();\n        })\n        .catch((err) => {\n          this._showLoading(false);\n          this._errorMsg = `Error loading audio: ${err.statusText}`;\n        });\n    } else {\n      mp3.style.display = \"none\";\n      this._showLoading(false);\n    }\n  }\n\n  openDeleteDialog() {\n    if (confirm(this.localize(\"ui.panel.mailbox.delete_prompt\"))) {\n      this.deleteSelected();\n    }\n  }\n\n  deleteSelected() {\n    const msg = this._currentMessage;\n    this.hass.callApi(\n      \"DELETE\",\n      `mailbox/delete/${msg.platform.name}/${msg.sha}`\n    );\n    this._dialogDone();\n  }\n\n  _dialogDone() {\n    this.$.mp3.pause();\n    this.setProperties({\n      _currentMessage: null,\n      _errorMsg: null,\n      _loading: false,\n      _opened: false,\n    });\n  }\n\n  _openedChanged(ev) {\n    // Closed dialog by clicking on the overlay\n    // Check against dialogClosedCallback to make sure we didn't change\n    // programmatically\n    if (!ev.detail.value) {\n      this._dialogDone();\n    }\n  }\n\n  _showLoading(displayed) {\n    const delicon = this.$.delicon;\n    if (displayed) {\n      this._loading = true;\n      delicon.style.display = \"none\";\n    } else {\n      const platform = this._currentMessage.platform;\n      this._loading = false;\n      delicon.style.display = platform.can_delete ? \"\" : \"none\";\n    }\n  }\n}\ncustomElements.define(\"ha-dialog-show-audio-message\", HaDialogShowAudioMessage);\n"],"names":[],"sourceRoot":""}
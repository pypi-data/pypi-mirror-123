{"version":3,"sources":["../../core/src/app/time/TimezoneSelect.tsx","../../core/src/app/SettingsRoot.tsx","../../core/src/ui/Page.tsx","../../core/src/hooks/useDocumentTitle.tsx"],"names":["formatOffset","mm","amm","Math","abs","floor","AllTimezoneItems","moment","tz","names","map","key","offset","zone","utcOffset","Date","now","offsetLabel","sort","a","b","PopularTimezones","SortedTimezoneItems","browserTimezoneAbbreviation","browserTimezone","filter","t","includes","TimezoneSelect","trigger","React","TimezoneContext","timezone","setTimezone","popoverProps","position","activeItem","find","inputProps","style","width","items","itemPredicate","query","toLowerCase","itemRenderer","props","startsWith","Divider","Item","active","modifiers","onClick","handleClick","label","text","noResults","disabled","onItemSelect","SettingsRoot","useDocumentTitle","getFeatureFlags","flags","setFlags","setFeatureFlags","toggleFlag","flag","f","window","location","reload","ButtonLink","automaticLabel","Page","height","overflowY","Group","direction","spacing","PageHeader","title","MetadataTable","rows","value","checked","FeatureFlag","flagDebugConsoleLogging","onChange","flagPipelineModeTuples","flagAssetGraph","styled","div","currentTitle","document"],"mappings":"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","file":"static/js/10.72ac91c7.chunk.js","sourcesContent":["import {Menu} from '@blueprintjs/core';\nimport {Select} from '@blueprintjs/select';\nimport moment from 'moment-timezone';\nimport * as React from 'react';\n\nimport {TimezoneContext} from './TimezoneContext';\nimport {browserTimezone, browserTimezoneAbbreviation} from './browserTimezone';\n\nconst formatOffset = (mm: number) => {\n  const amm = Math.abs(mm);\n  // moment.tz.zone() offsets are inverted: https://momentjs.com/timezone/docs/#/zone-object/offset/\n  return `${mm < 0 ? '+' : '-'}${Math.floor(amm / 60)}:${amm % 60 < 10 ? '0' : ''}${amm % 60}`;\n};\n\nconst AllTimezoneItems = moment.tz\n  .names()\n  .map((key) => {\n    const offset = moment.tz.zone(key)?.utcOffset(Date.now()) || 0;\n    return {offsetLabel: `${formatOffset(offset)}`, offset, key};\n  })\n  .sort((a, b) => a.offset - b.offset);\n\nconst PopularTimezones = ['UTC', 'US/Pacific', 'US/Mountain', 'US/Central', 'US/Eastern'];\n\nconst offsetLabel = () => {\n  return `${browserTimezoneAbbreviation()} ${formatOffset(\n    moment.tz.zone(browserTimezone())?.utcOffset(Date.now()) || 0,\n  )}`;\n};\n\nconst SortedTimezoneItems = [\n  {\n    key: 'Automatic',\n    offsetLabel: offsetLabel(),\n    offset: 0,\n  },\n  {\n    key: 'divider-1',\n    offsetLabel: '',\n    offset: 0,\n  },\n  ...AllTimezoneItems.filter((t) => PopularTimezones.includes(t.key)),\n  {\n    key: 'divider-2',\n    offsetLabel: '',\n    offset: 0,\n  },\n  ...AllTimezoneItems.filter((t) => !PopularTimezones.includes(t.key)),\n];\n\ninterface Props {\n  trigger: (timezone: string) => React.ReactNode;\n}\n\nexport const TimezoneSelect: React.FC<Props> = ({trigger}) => {\n  const [timezone, setTimezone] = React.useContext(TimezoneContext);\n\n  return (\n    <Select<typeof SortedTimezoneItems[0]>\n      popoverProps={{position: 'bottom-right'}}\n      activeItem={SortedTimezoneItems.find((tz) => tz.key === timezone)}\n      inputProps={{style: {width: '300px'}}}\n      items={SortedTimezoneItems}\n      itemPredicate={(query, tz) => tz.key.toLowerCase().includes(query.toLowerCase())}\n      itemRenderer={(tz, props) =>\n        tz.key.startsWith('divider') ? (\n          <Menu.Divider key={tz.key} />\n        ) : (\n          <Menu.Item\n            active={props.modifiers.active}\n            onClick={props.handleClick}\n            label={tz.offsetLabel}\n            key={tz.key}\n            text={tz.key}\n          />\n        )\n      }\n      noResults={<Menu.Item disabled text=\"No results.\" />}\n      onItemSelect={(tz) => setTimezone(tz.key)}\n    >\n      {trigger(timezone)}\n    </Select>\n  );\n};\n","import {Switch} from '@blueprintjs/core';\nimport * as React from 'react';\n\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {ButtonLink} from '../ui/ButtonLink';\nimport {Group} from '../ui/Group';\nimport {MetadataTable} from '../ui/MetadataTable';\nimport {Page} from '../ui/Page';\nimport {PageHeader} from '../ui/PageHeader';\nimport {Heading, Subheading} from '../ui/Text';\n\nimport {FeatureFlag, getFeatureFlags, setFeatureFlags} from './Flags';\nimport {TimezoneSelect} from './time/TimezoneSelect';\nimport {automaticLabel} from './time/browserTimezone';\n\nconst SettingsRoot = () => {\n  useDocumentTitle('User settings');\n\n  const [flags, setFlags] = React.useState<FeatureFlag[]>(() => getFeatureFlags());\n\n  React.useEffect(() => {\n    setFeatureFlags(flags);\n  });\n\n  const toggleFlag = (flag: FeatureFlag) => {\n    setFlags(flags.includes(flag) ? flags.filter((f) => f !== flag) : [...flags, flag]);\n    window.location.reload();\n  };\n\n  const trigger = React.useCallback(\n    (timezone: string) => (\n      <ButtonLink>{timezone === 'Automatic' ? automaticLabel() : timezone}</ButtonLink>\n    ),\n    [],\n  );\n\n  return (\n    <Page style={{height: '100vh', overflowY: 'auto'}}>\n      <Group direction=\"column\" spacing={24}>\n        <PageHeader title={<Heading>User settings</Heading>} />\n        <Group direction=\"column\" spacing={16}>\n          <Subheading>Preferences</Subheading>\n          <MetadataTable\n            rows={[\n              {\n                key: 'Timezone',\n                value: <TimezoneSelect trigger={trigger} />,\n              },\n            ]}\n          />\n        </Group>\n        <Group direction=\"column\" spacing={16}>\n          <Subheading>Experimental features</Subheading>\n          <MetadataTable\n            rows={[\n              {\n                key: 'Debug console logging',\n                value: (\n                  <Switch\n                    checked={flags.includes(FeatureFlag.flagDebugConsoleLogging)}\n                    onChange={() => toggleFlag(FeatureFlag.flagDebugConsoleLogging)}\n                  />\n                ),\n              },\n              {\n                key: 'Experimental Core APIs (Job & Graph)',\n                value: (\n                  <Switch\n                    checked={flags.includes(FeatureFlag.flagPipelineModeTuples)}\n                    onChange={() => toggleFlag(FeatureFlag.flagPipelineModeTuples)}\n                  />\n                ),\n              },\n              {\n                key: 'Experimental Asset APIs',\n                value: (\n                  <Switch\n                    checked={flags.includes(FeatureFlag.flagAssetGraph)}\n                    onChange={() => toggleFlag(FeatureFlag.flagAssetGraph)}\n                  />\n                ),\n              },\n            ]}\n          />\n        </Group>\n      </Group>\n    </Page>\n  );\n};\n\n// Imported via React.lazy, which requires a default export.\n// eslint-disable-next-line import/no-default-export\nexport default SettingsRoot;\n","import styled from 'styled-components/macro';\n\nexport const Page = styled.div`\n  overflow-y: auto;\n  padding: 20px;\n  width: 100%;\n`;\n","import * as React from 'react';\n\nexport const useDocumentTitle = (title: string) => {\n  React.useEffect(() => {\n    const currentTitle = document.title;\n    document.title = title;\n    return () => {\n      document.title = currentTitle;\n    };\n  }, [title]);\n};\n"],"sourceRoot":""}
from typing import Any

from google.auth import credentials as credentials, exceptions as exceptions
from google.oauth2 import reauth as reauth

class Credentials(credentials.ReadOnlyScoped, credentials.CredentialsWithQuotaProject):
    token: Any
    expiry: Any
    def __init__(
        self,
        token,
        refresh_token: Any | None = ...,
        id_token: Any | None = ...,
        token_uri: Any | None = ...,
        client_id: Any | None = ...,
        client_secret: Any | None = ...,
        scopes: Any | None = ...,
        default_scopes: Any | None = ...,
        quota_project_id: Any | None = ...,
        expiry: Any | None = ...,
        rapt_token: Any | None = ...,
        refresh_handler: Any | None = ...,
        enable_reauth_refresh: bool = ...,
    ) -> None: ...
    @property
    def refresh_token(self): ...
    @property
    def scopes(self): ...
    @property
    def token_uri(self): ...
    @property
    def id_token(self): ...
    @property
    def client_id(self): ...
    @property
    def client_secret(self): ...
    @property
    def requires_scopes(self): ...
    @property
    def rapt_token(self): ...
    @property
    def refresh_handler(self): ...
    @refresh_handler.setter
    def refresh_handler(self, value) -> None: ...
    def with_quota_project(self, quota_project_id): ...
    def refresh(self, request) -> None: ...
    @classmethod
    def from_authorized_user_info(cls, info, scopes: Any | None = ...): ...
    @classmethod
    def from_authorized_user_file(cls, filename, scopes: Any | None = ...): ...
    def to_json(self, strip: Any | None = ...): ...

class UserAccessTokenCredentials(credentials.CredentialsWithQuotaProject):
    def __init__(
        self, account: Any | None = ..., quota_project_id: Any | None = ...
    ) -> None: ...
    def with_account(self, account): ...
    def with_quota_project(self, quota_project_id): ...
    token: Any
    def refresh(self, request) -> None: ...
    def before_request(self, request, method, url, headers) -> None: ...

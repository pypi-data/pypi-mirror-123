from typing import Any

from google.auth import credentials as credentials
from google.oauth2 import sts as sts

class CredentialAccessBoundary:
    def __init__(self, rules=...) -> None: ...
    @property
    def rules(self): ...
    @rules.setter
    def rules(self, value) -> None: ...
    def add_rule(self, rule) -> None: ...
    def to_json(self): ...

class AccessBoundaryRule:
    def __init__(
        self,
        available_resource,
        available_permissions,
        availability_condition: Any | None = ...,
    ) -> None: ...
    @property
    def available_resource(self): ...
    @available_resource.setter
    def available_resource(self, value) -> None: ...
    @property
    def available_permissions(self): ...
    @available_permissions.setter
    def available_permissions(self, value) -> None: ...
    @property
    def availability_condition(self): ...
    @availability_condition.setter
    def availability_condition(self, value) -> None: ...
    def to_json(self): ...

class AvailabilityCondition:
    def __init__(
        self, expression, title: Any | None = ..., description: Any | None = ...
    ) -> None: ...
    @property
    def expression(self): ...
    @expression.setter
    def expression(self, value) -> None: ...
    @property
    def title(self): ...
    @title.setter
    def title(self, value) -> None: ...
    @property
    def description(self): ...
    @description.setter
    def description(self, value) -> None: ...
    def to_json(self): ...

class Credentials(credentials.CredentialsWithQuotaProject):
    def __init__(
        self,
        source_credentials,
        credential_access_boundary,
        quota_project_id: Any | None = ...,
    ) -> None: ...
    token: Any
    expiry: Any
    def refresh(self, request) -> None: ...
    def with_quota_project(self, quota_project_id): ...

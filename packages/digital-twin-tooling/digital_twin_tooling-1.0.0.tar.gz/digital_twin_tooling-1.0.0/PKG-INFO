Metadata-Version: 2.1
Name: digital_twin_tooling
Version: 1.0.0
Summary: A framework for working with digital twin systems and simulation
Home-page: https://github.com/INTO-CPS-Association/digital-twin-platform
Author: Kenneth Lausdahl
Author-email: kenneth@lausdahl.com
License: UNKNOWN
Project-URL: Bug Reports, https://github.com/INTO-CPS-Association/digital-twin-platform/issues
Project-URL: Funding, https://github.com/INTO-CPS-Association/digital-twin-platform
Project-URL: Source, https://github.com/INTO-CPS-Association/digital-twin-platform.git
Keywords: digital twin,setuptools,development
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Build Tools
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3 :: Only
Requires-Python: >=3.9, <4
Description-Content-Type: text/markdown
Provides-Extra: dev
Provides-Extra: test
License-File: LICENSE.txt

# A tool for managing digital twin simulations

This project aims to provide a structured approach to working with digital twins and support the analysis that one might want to carry out in this context.

The project provides a pipeline like approach for structuring digital twin simulations. It structures a simulation as a number of participating tasks:
* data providers: Providing data to the simulation by connecting to external sources and translating the data into a simulation compatible format.
* simulators: Providing the ability to simulate models (such as FMI models using maestro)

The tool is provided as a module and can be used like:

```bash
python -m "digital_twin_tooling" project -project <path to project file>.yml -show -run 1 -fmus <path to folder contaning the fmus>
```

Show status of launchers in job folder
```bash
python -m "digital_twin_tooling" launcher  -work jobs/e1b27ef9-2699-474d-bba5-c23fdcf31821/ -s
```




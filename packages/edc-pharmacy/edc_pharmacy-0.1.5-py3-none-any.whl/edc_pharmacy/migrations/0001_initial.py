# Generated by Django 3.2.7 on 2021-10-10 22:05

import _socket
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_audit_fields.fields.hostname_modification_field
import django_audit_fields.fields.userfield
import django_audit_fields.fields.uuid_auto_field
import django_audit_fields.models.audit_model_mixin
import django_revision.revision_field
import edc_pharmacy.models.dispensing_history
import edc_pharmacy.models.dosage_guideline
import edc_pharmacy.models.formulation
import edc_pharmacy.models.medication
import edc_pharmacy.models.return_history
import edc_pharmacy.models.rx_refill
import edc_registration.models.managers
import edc_sites.models
import edc_utils.date
import simple_history.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('sites', '0002_alter_domain_unique'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('edc_registration', '0022_auto_20210801_2021'),
    ]

    operations = [
        migrations.CreateModel(
            name='Container',
            fields=[
                ('name', models.CharField(db_index=True, help_text='This is the stored value, required', max_length=250, unique=True, verbose_name='Stored value')),
                ('display_name', models.CharField(db_index=True, help_text='(suggest 40 characters max.)', max_length=250, unique=True, verbose_name='Name')),
                ('display_index', models.IntegerField(db_index=True, default=0, help_text='Index to control display order if not alphabetical, not required', verbose_name='display index')),
                ('field_name', models.CharField(blank=True, editable=False, help_text='Not required', max_length=25, null=True)),
                ('version', models.CharField(default='1.0', editable=False, max_length=35)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': 'Container',
                'verbose_name_plural': 'Containers',
                'ordering': ['display_index', 'display_name'],
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view', 'export', 'import'),
            },
        ),
        migrations.CreateModel(
            name='DispensingHistory',
            fields=[
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('created', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('modified', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('user_created', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', django_audit_fields.fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', django_audit_fields.fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('dispensed_datetime', models.DateTimeField(default=edc_utils.date.get_utcnow)),
                ('dispensed', models.DecimalField(decimal_places=1, max_digits=6)),
                ('status', models.CharField(choices=[('dispensed', 'Dispensed'), ('cancelled', 'Cancelled')], default='dispensed', max_length=25, verbose_name='Status')),
            ],
            options={
                'verbose_name': 'Dispensing history',
                'verbose_name_plural': 'Dispensing history',
                'ordering': ('-modified', '-created'),
                'get_latest_by': 'modified',
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view', 'export', 'import'),
            },
            managers=[
                ('objects', edc_pharmacy.models.dispensing_history.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='DosageGuideline',
            fields=[
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('created', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('modified', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('user_created', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', django_audit_fields.fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', django_audit_fields.fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('dose', models.DecimalField(blank=True, decimal_places=2, help_text="dose per 'frequency unit' if NOT considering subject's weight", max_digits=8, null=True)),
                ('dose_per_kg', models.DecimalField(blank=True, decimal_places=2, help_text="dose per 'frequency unit' if considering subject's weight", max_digits=8, null=True)),
                ('frequency', models.DecimalField(decimal_places=2, default=1, help_text="number of times per 'frequency unit'", max_digits=6, validators=[django.core.validators.MinValueValidator(1.0)], verbose_name='Frequency')),
            ],
            options={
                'verbose_name': 'Dosage Guideline',
                'verbose_name_plural': 'Dosage Guidelines',
                'ordering': ('-modified', '-created'),
                'get_latest_by': 'modified',
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view', 'export', 'import'),
            },
            managers=[
                ('objects', edc_pharmacy.models.dosage_guideline.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Formulation',
            fields=[
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('created', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('modified', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('user_created', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', django_audit_fields.fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', django_audit_fields.fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('strength', models.DecimalField(decimal_places=1, max_digits=6)),
                ('notes', models.TextField(blank=True, max_length=250, null=True)),
            ],
            options={
                'verbose_name': 'Medication',
                'verbose_name_plural': 'Medications',
                'ordering': ('-modified', '-created'),
                'get_latest_by': 'modified',
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view', 'export', 'import'),
            },
            managers=[
                ('objects', edc_pharmacy.models.formulation.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='FormulationType',
            fields=[
                ('name', models.CharField(db_index=True, help_text='This is the stored value, required', max_length=250, unique=True, verbose_name='Stored value')),
                ('display_name', models.CharField(db_index=True, help_text='(suggest 40 characters max.)', max_length=250, unique=True, verbose_name='Name')),
                ('display_index', models.IntegerField(db_index=True, default=0, help_text='Index to control display order if not alphabetical, not required', verbose_name='display index')),
                ('field_name', models.CharField(blank=True, editable=False, help_text='Not required', max_length=25, null=True)),
                ('version', models.CharField(default='1.0', editable=False, max_length=35)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': 'Form',
                'verbose_name_plural': 'Forms',
                'ordering': ['display_index', 'display_name'],
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view', 'export', 'import'),
            },
        ),
        migrations.CreateModel(
            name='FrequencyUnits',
            fields=[
                ('name', models.CharField(db_index=True, help_text='This is the stored value, required', max_length=250, unique=True, verbose_name='Stored value')),
                ('display_name', models.CharField(db_index=True, help_text='(suggest 40 characters max.)', max_length=250, unique=True, verbose_name='Name')),
                ('display_index', models.IntegerField(db_index=True, default=0, help_text='Index to control display order if not alphabetical, not required', verbose_name='display index')),
                ('field_name', models.CharField(blank=True, editable=False, help_text='Not required', max_length=25, null=True)),
                ('version', models.CharField(default='1.0', editable=False, max_length=35)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': 'Frequency units',
                'verbose_name_plural': 'Frequency units',
                'ordering': ['display_index', 'display_name'],
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view', 'export', 'import'),
            },
        ),
        migrations.CreateModel(
            name='HistoricalDispensingHistory',
            fields=[
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('created', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('modified', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('user_created', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', django_audit_fields.fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', django_audit_fields.fields.uuid_auto_field.UUIDAutoField(blank=True, db_index=True, editable=False, help_text='System auto field. UUID primary key.')),
                ('dispensed_datetime', models.DateTimeField(default=edc_utils.date.get_utcnow)),
                ('dispensed', models.DecimalField(decimal_places=1, max_digits=6)),
                ('status', models.CharField(choices=[('dispensed', 'Dispensed'), ('cancelled', 'Cancelled')], default='dispensed', max_length=25, verbose_name='Status')),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Dispensing history',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDosageGuideline',
            fields=[
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('created', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('modified', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('user_created', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', django_audit_fields.fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', django_audit_fields.fields.uuid_auto_field.UUIDAutoField(blank=True, db_index=True, editable=False, help_text='System auto field. UUID primary key.')),
                ('dose', models.DecimalField(blank=True, decimal_places=2, help_text="dose per 'frequency unit' if NOT considering subject's weight", max_digits=8, null=True)),
                ('dose_per_kg', models.DecimalField(blank=True, decimal_places=2, help_text="dose per 'frequency unit' if considering subject's weight", max_digits=8, null=True)),
                ('frequency', models.DecimalField(decimal_places=2, default=1, help_text="number of times per 'frequency unit'", max_digits=6, validators=[django.core.validators.MinValueValidator(1.0)], verbose_name='Frequency')),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Dosage Guideline',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalFormulation',
            fields=[
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('created', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('modified', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('user_created', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', django_audit_fields.fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', django_audit_fields.fields.uuid_auto_field.UUIDAutoField(blank=True, db_index=True, editable=False, help_text='System auto field. UUID primary key.')),
                ('strength', models.DecimalField(decimal_places=1, max_digits=6)),
                ('notes', models.TextField(blank=True, max_length=250, null=True)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Medication',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalMedication',
            fields=[
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('created', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('modified', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('user_created', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', django_audit_fields.fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', django_audit_fields.fields.uuid_auto_field.UUIDAutoField(blank=True, db_index=True, editable=False, help_text='System auto field. UUID primary key.')),
                ('name', models.CharField(db_index=True, max_length=35)),
                ('notes', models.TextField(blank=True, max_length=250, null=True)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Medication',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalReturnHistory',
            fields=[
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('created', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('modified', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('user_created', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', django_audit_fields.fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', django_audit_fields.fields.uuid_auto_field.UUIDAutoField(blank=True, db_index=True, editable=False, help_text='System auto field. UUID primary key.')),
                ('return_datetime', models.DateTimeField(default=edc_utils.date.get_utcnow)),
                ('returned', models.DecimalField(decimal_places=1, max_digits=6)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Return history',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalRx',
            fields=[
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('created', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('modified', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('user_created', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', django_audit_fields.fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', django_audit_fields.fields.uuid_auto_field.UUIDAutoField(blank=True, db_index=True, editable=False, help_text='System auto field. UUID primary key.')),
                ('subject_identifier', models.CharField(max_length=50)),
                ('slug', models.CharField(db_index=True, default='', editable=False, help_text='a field used for quick search', max_length=250, null=True)),
                ('report_datetime', models.DateTimeField(default=edc_utils.date.get_utcnow)),
                ('rx_date', models.DateField(default=edc_utils.date.get_utcnow, verbose_name='Date RX written')),
                ('status', models.CharField(choices=[('New', 'New'), ('partial', 'Partially filled'), ('filled', 'Filled'), ('cancelled', 'Cancelled')], default='New', max_length=25)),
                ('refill', models.IntegerField(blank=True, help_text='Number of times this prescription may be refilled', null=True)),
                ('rando_sid', models.CharField(blank=True, max_length=25, null=True)),
                ('randomizer_name', models.CharField(blank=True, max_length=25, null=True)),
                ('weight_in_kgs', models.DecimalField(blank=True, decimal_places=1, max_digits=6, null=True)),
                ('clinician_initials', models.CharField(max_length=3, null=True)),
                ('notes', models.TextField(blank=True, help_text='Private notes for pharmacist only', max_length=250, null=True)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Prescription',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalRxRefill',
            fields=[
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('created', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('modified', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('user_created', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', django_audit_fields.fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', django_audit_fields.fields.uuid_auto_field.UUIDAutoField(blank=True, db_index=True, editable=False, help_text='System auto field. UUID primary key.')),
                ('dose', models.DecimalField(blank=True, decimal_places=1, help_text='dose per frequency if NOT considering weight', max_digits=6, null=True)),
                ('calculate_dose', models.BooleanField(default=True)),
                ('frequency', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('weight_in_kgs', models.DecimalField(blank=True, decimal_places=1, max_digits=6, null=True)),
                ('start_date', models.DateField(verbose_name='start')),
                ('end_date', models.DateField(help_text='inclusive', verbose_name='end')),
                ('total', models.DecimalField(blank=True, decimal_places=1, help_text='Leave blank to auto-calculate', max_digits=6, null=True)),
                ('remaining', models.DecimalField(blank=True, decimal_places=1, help_text='Leave blank to auto-calculate', max_digits=6, null=True)),
                ('notes', models.TextField(blank=True, help_text='Additional information for patient', max_length=250, null=True)),
                ('verified', models.BooleanField(default=False)),
                ('verified_datetime', models.DateTimeField(blank=True, null=True)),
                ('as_string', models.CharField(editable=False, max_length=150)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical RX refill',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Medication',
            fields=[
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('created', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('modified', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('user_created', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', django_audit_fields.fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', django_audit_fields.fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=35, unique=True)),
                ('notes', models.TextField(blank=True, max_length=250, null=True)),
            ],
            options={
                'verbose_name': 'Medication',
                'verbose_name_plural': 'Medications',
                'ordering': ('-modified', '-created'),
                'get_latest_by': 'modified',
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view', 'export', 'import'),
            },
            managers=[
                ('objects', edc_pharmacy.models.medication.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ReturnHistory',
            fields=[
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('created', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('modified', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('user_created', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', django_audit_fields.fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', django_audit_fields.fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('return_datetime', models.DateTimeField(default=edc_utils.date.get_utcnow)),
                ('returned', models.DecimalField(decimal_places=1, max_digits=6)),
            ],
            options={
                'verbose_name': 'Return history',
                'verbose_name_plural': 'Return history',
                'ordering': ('-modified', '-created'),
                'get_latest_by': 'modified',
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view', 'export', 'import'),
            },
            managers=[
                ('objects', edc_pharmacy.models.return_history.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('name', models.CharField(db_index=True, help_text='This is the stored value, required', max_length=250, unique=True, verbose_name='Stored value')),
                ('display_name', models.CharField(db_index=True, help_text='(suggest 40 characters max.)', max_length=250, unique=True, verbose_name='Name')),
                ('display_index', models.IntegerField(db_index=True, default=0, help_text='Index to control display order if not alphabetical, not required', verbose_name='display index')),
                ('field_name', models.CharField(blank=True, editable=False, help_text='Not required', max_length=25, null=True)),
                ('version', models.CharField(default='1.0', editable=False, max_length=35)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': 'Route',
                'verbose_name_plural': 'Routes',
                'ordering': ['display_index', 'display_name'],
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view', 'export', 'import'),
            },
        ),
        migrations.CreateModel(
            name='Rx',
            fields=[
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('created', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('modified', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('user_created', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', django_audit_fields.fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', django_audit_fields.fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('subject_identifier', models.CharField(max_length=50)),
                ('slug', models.CharField(db_index=True, default='', editable=False, help_text='a field used for quick search', max_length=250, null=True)),
                ('report_datetime', models.DateTimeField(default=edc_utils.date.get_utcnow)),
                ('rx_date', models.DateField(default=edc_utils.date.get_utcnow, verbose_name='Date RX written')),
                ('status', models.CharField(choices=[('New', 'New'), ('partial', 'Partially filled'), ('filled', 'Filled'), ('cancelled', 'Cancelled')], default='New', max_length=25)),
                ('refill', models.IntegerField(blank=True, help_text='Number of times this prescription may be refilled', null=True)),
                ('rando_sid', models.CharField(blank=True, max_length=25, null=True)),
                ('randomizer_name', models.CharField(blank=True, max_length=25, null=True)),
                ('weight_in_kgs', models.DecimalField(blank=True, decimal_places=1, max_digits=6, null=True)),
                ('clinician_initials', models.CharField(max_length=3, null=True)),
                ('notes', models.TextField(blank=True, help_text='Private notes for pharmacist only', max_length=250, null=True)),
            ],
            options={
                'verbose_name': 'Prescription',
                'verbose_name_plural': 'Prescriptions',
                'ordering': ('-modified', '-created'),
                'get_latest_by': 'modified',
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view', 'export', 'import'),
            },
            managers=[
                ('on_site', edc_sites.models.CurrentSiteManager()),
            ],
        ),
        migrations.CreateModel(
            name='RxRefill',
            fields=[
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('created', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('modified', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('user_created', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', django_audit_fields.fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', django_audit_fields.fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('dose', models.DecimalField(blank=True, decimal_places=1, help_text='dose per frequency if NOT considering weight', max_digits=6, null=True)),
                ('calculate_dose', models.BooleanField(default=True)),
                ('frequency', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('weight_in_kgs', models.DecimalField(blank=True, decimal_places=1, max_digits=6, null=True)),
                ('start_date', models.DateField(verbose_name='start')),
                ('end_date', models.DateField(help_text='inclusive', verbose_name='end')),
                ('total', models.DecimalField(blank=True, decimal_places=1, help_text='Leave blank to auto-calculate', max_digits=6, null=True)),
                ('remaining', models.DecimalField(blank=True, decimal_places=1, help_text='Leave blank to auto-calculate', max_digits=6, null=True)),
                ('notes', models.TextField(blank=True, help_text='Additional information for patient', max_length=250, null=True)),
                ('verified', models.BooleanField(default=False)),
                ('verified_datetime', models.DateTimeField(blank=True, null=True)),
                ('as_string', models.CharField(editable=False, max_length=150)),
            ],
            options={
                'verbose_name': 'RX refill',
                'verbose_name_plural': 'RX refills',
                'ordering': ('-modified', '-created'),
                'get_latest_by': 'modified',
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view', 'export', 'import'),
            },
            managers=[
                ('on_site', edc_sites.models.CurrentSiteManager()),
                ('objects', edc_pharmacy.models.rx_refill.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Units',
            fields=[
                ('name', models.CharField(db_index=True, help_text='This is the stored value, required', max_length=250, unique=True, verbose_name='Stored value')),
                ('display_name', models.CharField(db_index=True, help_text='(suggest 40 characters max.)', max_length=250, unique=True, verbose_name='Name')),
                ('display_index', models.IntegerField(db_index=True, default=0, help_text='Index to control display order if not alphabetical, not required', verbose_name='display index')),
                ('field_name', models.CharField(blank=True, editable=False, help_text='Not required', max_length=25, null=True)),
                ('version', models.CharField(default='1.0', editable=False, max_length=35)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': 'Units',
                'verbose_name_plural': 'Units',
                'ordering': ['display_index', 'display_name'],
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view', 'export', 'import'),
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
            ],
            options={
                'verbose_name': 'Subject',
                'verbose_name_plural': 'Subjects',
                'proxy': True,
                'default_permissions': ('view', 'export'),
                'indexes': [],
                'constraints': [],
            },
            bases=('edc_registration.registeredsubject',),
            managers=[
                ('on_site', edc_sites.models.CurrentSiteManager()),
                ('objects', edc_registration.models.managers.RegisteredSubjectManager()),
            ],
        ),
        migrations.AddIndex(
            model_name='units',
            index=models.Index(fields=['id', 'display_name', 'display_index'], name='edc_pharmac_id_93aa79_idx'),
        ),
        migrations.AddField(
            model_name='rxrefill',
            name='dosage_guideline',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='edc_pharmacy.dosageguideline'),
        ),
        migrations.AddField(
            model_name='rxrefill',
            name='formulation',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='edc_pharmacy.formulation'),
        ),
        migrations.AddField(
            model_name='rxrefill',
            name='frequency_units',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='edc_pharmacy.frequencyunits', verbose_name='per'),
        ),
        migrations.AddField(
            model_name='rxrefill',
            name='rx',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='edc_pharmacy.rx'),
        ),
        migrations.AddField(
            model_name='rxrefill',
            name='site',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='sites.site'),
        ),
        migrations.AddField(
            model_name='rx',
            name='medication',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='edc_pharmacy.medication'),
        ),
        migrations.AddField(
            model_name='rx',
            name='registered_subject',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='edc_pharmacy.subject', verbose_name='Subject Identifier'),
        ),
        migrations.AddField(
            model_name='rx',
            name='site',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='sites.site'),
        ),
        migrations.AddIndex(
            model_name='route',
            index=models.Index(fields=['id', 'display_name', 'display_index'], name='edc_pharmac_id_b35112_idx'),
        ),
        migrations.AddField(
            model_name='returnhistory',
            name='rx_refill',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='edc_pharmacy.rxrefill'),
        ),
        migrations.AddField(
            model_name='historicalrxrefill',
            name='dosage_guideline',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edc_pharmacy.dosageguideline'),
        ),
        migrations.AddField(
            model_name='historicalrxrefill',
            name='formulation',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edc_pharmacy.formulation'),
        ),
        migrations.AddField(
            model_name='historicalrxrefill',
            name='frequency_units',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edc_pharmacy.frequencyunits', verbose_name='per'),
        ),
        migrations.AddField(
            model_name='historicalrxrefill',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalrxrefill',
            name='rx',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edc_pharmacy.rx'),
        ),
        migrations.AddField(
            model_name='historicalrxrefill',
            name='site',
            field=models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='sites.site'),
        ),
        migrations.AddField(
            model_name='historicalrx',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalrx',
            name='medication',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edc_pharmacy.medication'),
        ),
        migrations.AddField(
            model_name='historicalrx',
            name='registered_subject',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edc_pharmacy.subject', verbose_name='Subject Identifier'),
        ),
        migrations.AddField(
            model_name='historicalrx',
            name='site',
            field=models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='sites.site'),
        ),
        migrations.AddField(
            model_name='historicalreturnhistory',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalreturnhistory',
            name='rx_refill',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edc_pharmacy.rxrefill'),
        ),
        migrations.AddField(
            model_name='historicalmedication',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalformulation',
            name='formulation_type',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edc_pharmacy.formulationtype'),
        ),
        migrations.AddField(
            model_name='historicalformulation',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalformulation',
            name='medication',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edc_pharmacy.medication'),
        ),
        migrations.AddField(
            model_name='historicalformulation',
            name='route',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edc_pharmacy.route'),
        ),
        migrations.AddField(
            model_name='historicalformulation',
            name='units',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edc_pharmacy.units'),
        ),
        migrations.AddField(
            model_name='historicaldosageguideline',
            name='dose_units',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edc_pharmacy.units'),
        ),
        migrations.AddField(
            model_name='historicaldosageguideline',
            name='frequency_units',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edc_pharmacy.frequencyunits', verbose_name='Frequency unit'),
        ),
        migrations.AddField(
            model_name='historicaldosageguideline',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicaldosageguideline',
            name='medication',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edc_pharmacy.medication'),
        ),
        migrations.AddField(
            model_name='historicaldispensinghistory',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicaldispensinghistory',
            name='rx_refill',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edc_pharmacy.rxrefill'),
        ),
        migrations.AddIndex(
            model_name='frequencyunits',
            index=models.Index(fields=['id', 'display_name', 'display_index'], name='edc_pharmac_id_840f3f_idx'),
        ),
        migrations.AddIndex(
            model_name='formulationtype',
            index=models.Index(fields=['id', 'display_name', 'display_index'], name='edc_pharmac_id_ff22c9_idx'),
        ),
        migrations.AddField(
            model_name='formulation',
            name='formulation_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='edc_pharmacy.formulationtype'),
        ),
        migrations.AddField(
            model_name='formulation',
            name='medication',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='edc_pharmacy.medication'),
        ),
        migrations.AddField(
            model_name='formulation',
            name='route',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='edc_pharmacy.route'),
        ),
        migrations.AddField(
            model_name='formulation',
            name='units',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='edc_pharmacy.units'),
        ),
        migrations.AddField(
            model_name='dosageguideline',
            name='dose_units',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='edc_pharmacy.units'),
        ),
        migrations.AddField(
            model_name='dosageguideline',
            name='frequency_units',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='edc_pharmacy.frequencyunits', verbose_name='Frequency unit'),
        ),
        migrations.AddField(
            model_name='dosageguideline',
            name='medication',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='edc_pharmacy.medication'),
        ),
        migrations.AddField(
            model_name='dispensinghistory',
            name='rx_refill',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='edc_pharmacy.rxrefill'),
        ),
        migrations.AddIndex(
            model_name='container',
            index=models.Index(fields=['id', 'display_name', 'display_index'], name='edc_pharmac_id_b68aba_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='rxrefill',
            unique_together={('rx', 'dosage_guideline', 'start_date')},
        ),
        migrations.AlterUniqueTogether(
            name='returnhistory',
            unique_together={('rx_refill', 'return_datetime')},
        ),
        migrations.AlterUniqueTogether(
            name='formulation',
            unique_together={('medication', 'strength', 'units', 'formulation_type')},
        ),
        migrations.AlterUniqueTogether(
            name='dosageguideline',
            unique_together={('medication', 'dose', 'dose_units', 'dose_per_kg')},
        ),
        migrations.AlterUniqueTogether(
            name='dispensinghistory',
            unique_together={('rx_refill', 'dispensed_datetime')},
        ),
    ]
